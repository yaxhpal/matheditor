function MathJQ() {
    this.latexSource = document.getElementById("latex-source");
    this.latexMath = document.getElementById("editable-math");
    this.FormulasPanelsLoaded = [];
    this.initialize()
}
var mathJQ;
window.mathJQ = mathJQ;
$(document).ready(function() {
    if (!mathJQ) {
        mathJQ = new MathJQ
    }
});
MathJQ.prototype = {
    initialize: function() {
        this.initializeLaTexSource();
        this.initializeMath();
        this.initializeNotAccordions()
    },
    initializeNotAccordions: function() {

        $("#basicmath").load("./resources/formulas/RELATION_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("basicmath")
        });
        $("#matrix").load("./resources/formulas/MATRIX_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("matrix")
        });
        $("#arrow").load("./resources/formulas/ARROW_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("arrow")
        });
        $("#cases").load("./resources/formulas/CASES_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("cases")
        });
        $("#integral").load("./resources/formulas/INTEGRAL_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("integral")
        });
        $("#calculus").load("./resources/formulas/CALCULUS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("calculus")
        });
        $("#logarit").load("./resources/formulas/FONCTION_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("logarit")
        });
        $("#symbols").load("./resources/formulas/OPERATOR_SYMBOLS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("symbols")
        });
        $("#more").load("./resources/formulas/L_U_GREEK_CHAR" + ".html", function() {
            mathJQ.initializeFormulaSymbols("more")
        });
        $("#layout").load("./resources/formulas/LAYOUTS" + ".html", function() {
            mathJQ.initializeFormulaSymbols("layout")
        })
    },
    initializeAccordions: function() {
        var e = this;
        $("#aaFormulas").accordion({
            onSelect: function(t) {
                var n = $("#aaFormulas").accordion("getSelected");
                if (n) {
                    var r = $(n).attr("id");
                    if (e.FormulasPanelsLoaded.indexOf(r) == -1) {
                        e.FormulasPanelsLoaded[e.FormulasPanelsLoaded.length] = r;
                        $(n).load("./resources/formulas/" + r + ".html", function() {
                            e.initializeFormulaSymbols(r)
                        })
                    }
                }
            }
        });
        var t = $("#aaFormulas").accordion("getSelected");
        if (t) {
            t.panel("collapse", false)
        }
    },
    initializeFormulaSymbols: function(e) {
        function n(e) {
            if (typeof $(e).attr("lbegin") != "undefined" && typeof $(e).attr("lend") != "undefined") {
                return $(e).attr("t")
            } else if (typeof $(e).attr("latex") != "undefined") {
                return $(e).attr("t")
            } else {
                return ""
            }
        }
        var t = this;
        $("#" + e).find(" a.s").addClass("easyui-tooltip").attr("title", function(e, t) {
            return n(this)
        }).mouseover(function(e) {
            $("#divInformation").html(n(this))
        }).mouseout(function(e) {
            $("#divInformation").html("&nbsp;")
        }).click(function(e) {
            e.preventDefault();
            if (typeof $(this).attr("lbegin") != "undefined" && typeof $(this).attr("lend") != "undefined") {
                t.tag($(this).attr("lbegin"), $(this).attr("lend"))
            } else if (typeof $(this).attr("latex") != "undefined") {
                t.insert($(this).attr("latex"))
            } else {}
        });
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, e])
    },
    initializeMath: function() {
        var e = this;
        $("#editable-math").bind("keydown keypress", function() {
            e.EditableMathChange()
        }).keydown().focus()
    },
    initializeLaTexSource: function() {
        var e = this;
        $("#latex-source").bind("keydown keypress paste", function() {
            e.SourceLaTexChange()
        })
    },
    printTree: function(e) {
        e = e.match(/<[a-z]+|<\/[a-z]+>|./ig);
        if (!e) return "";
        var t = "\n",
            n = [];
        for (var r = 0; r < e.length; r += 1) {
            var i = e[r];
            if (i.charAt(0) === "<") {
                if (i.charAt(1) === "/") {
                    t = t.slice(0, -2);
                    if (e[r + 1] && e[r + 1].slice(0, 2) === "</") i += t.slice(0, -2)
                } else {
                    n.push(t);
                    t += "  "
                }
                i = i.toLowerCase()
            }
            n.push(i)
        }
        return n.join("").slice(1)
    },
    insert: function(e) {
        $("#editable-math").mathquill("write", e);
        this.EditableMathChange()
    },
    setFocus: function() {
        $("#latex-source").focus()
    },
    tag: function(e, t) {
        e = e || null;
        t = t || e;
        if (!e || !t) {
            return
        }
        this.insert(e + t);
        this.setFocus()
    },
    EditableMathChange: function() {
        setTimeout(function() {
            var e = $("#editable-math").mathquill("latex");
            $("#latex-source").val(e)
        })
    },
    SourceLaTexChange: function() {
        var e = $("#latex-source").val();
        setTimeout(function() {
            var t = $("#latex-source").val();
            if (t !== e) {
                $("#editable-math").mathquill("latex", t)
            }
        })
    },
    UpdateVisualMath: function() {
        setTimeout(function() {
            $("#editable-math").mathquill("latex", $("#latex-source").val())
        })
    }
}