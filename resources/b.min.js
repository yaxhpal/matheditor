(function() {
    function c() {}

    function h(e) {
        var t = l.call(arguments, 1);
        return function() {
            return e.apply(this, t)
        }
    }

    function p(e, t) {
        if (!t) throw new Error("prayer failed: " + e)
    }

    function b(e) {
        p("a direction was passed", e === g || e === y)
    }

    function O(e, n, r, s) {
        function h() {
            l = t;
            var e = u.selection ? "$" + u.selection.latex() + "$" : "";
            m.select(e)
        }
        var o = e.contents().detach();
        if (!r) {
            e.addClass("mathquill-rendered-math")
        }
        n.jQ = e.attr(i, n.id);
        n.revert = function() {
            e.empty().unbind(".mathquill").removeClass("mathquill-rendered-math mathquill-editable mathquill-textbox").append(o)
        };
        var u = n.cursor = Ot(n);
        n.renderLatex(o.text());
        var a = n.textarea = w('<span class="textarea"><textarea></textarea></span>'),
            f = a.children();
        var l;
        n.selectionChanged = function() {
            if (l === t) {
                l = setTimeout(h)
            }
            j(e[0])
        };
        e.bind("selectstart.mathquill", function(e) {
            if (e.target !== f[0]) e.preventDefault();
            e.stopPropagation()
        });
        var p, d = u.blink;
        e.bind("mousedown.mathquill", function(n) {
            function r(e) {
                u.seek(w(e.target), e.pageX, e.pageY);
                if (u[g] !== p[g] || u.parent !== p.parent) {
                    u.selectFrom(p)
                }
                return false
            }

            function i(e) {
                delete e.target;
                return r(e)
            }

            function o(n) {
                p = t;
                u.blink = d;
                if (!u.selection) {
                    if (s) {
                        u.show()
                    } else {
                        a.detach()
                    }
                }
                e.unbind("mousemove", r);
                w(n.target.ownerDocument).unbind("mousemove", i).unbind("mouseup", o)
            }
            setTimeout(function() {
                f.focus()
            });
            u.blink = c;
            u.seek(w(n.target), n.pageX, n.pageY);
            p = E(u.parent, u[g], u[y]);
            if (!s) e.prepend(a);
            e.mousemove(r);
            w(n.target.ownerDocument).mousemove(i).mouseup(o);
            return false
        });
        if (!s) {
            var m = v(f, {
                container: e
            });
            e.bind("cut paste", false).bind("copy", h).prepend('<span class="selectable">$' + n.latex() + "$</span>");
            f.blur(function() {
                u.clearSelection();
                setTimeout(detach)
            });
            f.detach(function() {
                a.detach()
            });
            return
        }
        var m = v(f, {
            container: e,
            key: function(e, t) {
                u.parent.bubble("onKey", e, t)
            },
            text: function(e) {
                u.parent.bubble("onText", e)
            },
            cut: function(e) {
                if (u.selection) {
                    setTimeout(function() {
                        u.prepareEdit();
                        u.parent.bubble("redraw")
                    })
                }
                e.stopPropagation()
            },
            paste: function(e) {
                if (e.slice(0, 1) === "$" && e.slice(-1) === "$") {
                    e = e.slice(1, -1)
                } else {
                    e = "\\text{" + e + "}"
                }
                u.writeLatex(e).show()
            }
        });
        e.prepend(a);
        e.addClass("mathquill-editable");
        if (r) e.addClass("mathquill-textbox");
        f.focus(function(e) {
            if (!u.parent) u.insAtRightEnd(n);
            u.parent.jQ.addClass("hasCursor");
            if (u.selection) {
                u.selection.jQ.removeClass("blur");
                setTimeout(n.selectionChanged)
            } else u.show();
            e.stopPropagation()
        }).blur(function(e) {
            u.hide().parent.blur();
            if (u.selection) u.selection.jQ.addClass("blur");
            e.stopPropagation()
        });
        e.bind("focus.mathquill blur.mathquill", function(e) {
            f.trigger(e)
        }).blur()
    }

    function mt(e, t, n) {
        return d(dt, {
            ctrlSeq: e,
            htmlTemplate: "<" + t + " " + n + ">&0</" + t + ">"
        })
    }
    var e = window.jQuery,
        t, n, r = "mathquill-command-id",
        i = "mathquill-block-id",
        s = Math.min,
        o = Math.max,
        u = [],
        a = 0,
        f = "";
    sizecases = 0, caseString = "";
    var l = [].slice;
    var d = function(e, t, n) {
        function r(e) {
            return typeof e === "object"
        }

        function i(e) {
            return typeof e === "function"
        }

        function s() {}

        function o(u, a) {
            function f() {
                var e = new l;
                if (i(e.init)) e.init.apply(e, arguments);
                return e
            }

            function l() {}
            if (a === n) {
                a = u;
                u = Object
            }
            f.Bare = l;
            var c = s[e] = u[e];
            var h = l[e] = f[e] = new s;
            var p;
            h.constructor = f;
            f.mixin = function(t) {
                l[e] = f[e] = o(f, t)[e];
                return f
            };
            return (f.open = function(e) {
                p = {};
                if (i(e)) {
                    p = e.call(f, h, c, f, u)
                } else if (r(e)) {
                    p = e
                }
                if (r(p)) {
                    for (var n in p) {
                        if (t.call(p, n)) {
                            h[n] = p[n]
                        }
                    }
                }
                if (!i(h.init)) {
                    h.init = u
                }
                return f
            })(a)
        }
        return o
    }("prototype", {}.hasOwnProperty);
    var v = function() {
        function n(e) {
            var n = e.which || e.keyCode;
            var r = t[n];
            var i;
            var s = [];
            if (e.ctrlKey) s.push("Ctrl");
            if (e.originalEvent && e.originalEvent.metaKey) s.push("Meta");
            if (e.altKey) s.push("Alt");
            if (e.shiftKey) s.push("Shift");
            i = r || String.fromCharCode(n);
            if (!s.length && !r) return i;
            s.push(i);
            return s.join("-")
        }
        var t = {
            8: "Backspace",
            9: "Tab",
            10: "Enter",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            20: "CapsLock",
            27: "Esc",
            32: "Spacebar",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "Left",
            38: "Up",
            39: "Right",
            40: "Down",
            45: "Insert",
            46: "Del",
            144: "NumLock"
        };
        return function(r, i) {
            function m(e) {
                d = e;
                clearTimeout(v);
                v = setTimeout(e)
            }

            function g(e) {
                d();
                d = c;
                clearTimeout(v);
                h.val(e);
                if (e) h[0].select()
            }

            function y() {
                var e = h[0];
                if (!("selectionStart" in e)) return false;
                return e.selectionStart !== e.selectionEnd
            }

            function b(e) {
                var t = h.val();
                h.val("");
                if (t) e(t)
            }

            function w() {
                a(n(s), s)
            }

            function E(e) {
                s = e;
                o = null;
                w()
            }

            function S(e) {
                if (s && o) w();
                o = e;
                m(x)
            }

            function x() {
                if (y()) return;
                b(u)
            }

            function T() {
                s = o = null
            }

            function N(e) {
                h.focus();
                m(C)
            }

            function C() {
                b(f)
            }
            var s = null;
            var o = null;
            if (!i) i = {};
            var u = i.text || c;
            var a = i.key || c;
            var f = i.paste || c;
            var l = i.cut || c;
            var h = e(r);
            var p = e(i.container || h);
            var d = c,
                v;
            p.bind("keydown keypress input keyup focusout paste", function() {
                d()
            });
            p.bind({
                keydown: E,
                keypress: S,
                focusout: T,
                cut: l,
                paste: N
            });
            return {
                select: g
            }
        }
    }();
    var m = d(function(e, t, n) {
        function r(e, t) {
            if (e) {
                e = "'" + e + "'"
            } else {
                e = "EOF"
            }
            throw "Parse Error: " + t + " at " + e
        }
        e.init = function(e) {
            this._ = e
        };
        e.parse = function(e) {
            function t(e, t) {
                return t
            }
            return this.skip(g)._(e, t, r)
        };
        e.or = function(e) {
            p("or is passed a parser", e instanceof n);
            var t = this;
            return n(function(n, r, i) {
                function s(t) {
                    return e._(n, r, i)
                }
                return t._(n, r, s)
            })
        };
        e.then = function(e) {
            var t = this;
            return n(function(r, i, s) {
                function o(t, r) {
                    var o = e instanceof n ? e : e(r);
                    p("a parser is returned", o instanceof n);
                    return o._(t, i, s)
                }
                return t._(r, o, s)
            })
        };
        e.many = function() {
            var e = this;
            return n(function(t, n, r) {
                function s(e, n) {
                    t = e;
                    i.push(n);
                    return true
                }

                function o() {
                    return false
                }
                var i = [];
                while (e._(t, s, o));
                return n(t, i)
            })
        };
        e.times = function(e, t) {
            if (arguments.length < 2) t = e;
            var r = this;
            return n(function(n, i, s) {
                function l(e, t) {
                    o.push(t);
                    n = e;
                    return true
                }

                function c(e, t) {
                    a = t;
                    n = e;
                    return false
                }

                function h(e, t) {
                    return false
                }
                var o = [];
                var u = true;
                var a;
                for (var f = 0; f < e; f += 1) {
                    u = r._(n, l, c);
                    if (!u) return s(n, a)
                }
                for (; f < t && u; f += 1) {
                    u = r._(n, l, h)
                }
                return i(n, o)
            })
        };
        e.result = function(e) {
            return this.then(o(e))
        };
        e.atMost = function(e) {
            return this.times(0, e)
        };
        e.atLeast = function(e) {
            var t = this;
            return t.times(e).then(function(e) {
                return t.many().map(function(t) {
                    return e.concat(t)
                })
            })
        };
        e.map = function(e) {
            return this.then(function(t) {
                return o(e(t))
            })
        };
        e.skip = function(e) {
            return this.then(function(t) {
                return e.result(t)
            })
        };
        e.lstream = function() {
            return stream
        };
        var i = this.string = function(e) {
            var t = e.length;
            var r = "expected '" + e + "'";
            return n(function(n, i, s) {
                var o = n.slice(0, t);
                if (o === e) {
                    return i(n.slice(t), o)
                } else {
                    return s(n, r)
                }
            })
        };
        var s = this.regex = function(e) {
            p("regexp parser is anchored", e.toString().charAt(1) === "^");
            var t = "expected " + e;
            return n(function(n, r, i) {
                var s = e.exec(n);
                if (s) {
                    var o = s[0];
                    return r(n.slice(o.length), o)
                } else {
                    return i(n, t)
                }
            })
        };
        var o = n.succeed = function(e) {
            return n(function(t, n) {
                return n(t, e)
            })
        };
        var u = n.fail = function(e) {
            return n(function(t, n, r) {
                return r(t, e)
            })
        };
        var a = n.letter = s(/^[a-z]/i);
        var f = n.letters = s(/^[a-z]*/i);
        var l = n.digit = s(/^[0-9]/);
        var c = n.digits = s(/^[0-9]*/);
        var h = n.whitespace = s(/^\s+/);
        var d = n.optWhitespace = s(/^\s*/);
        var v = n.any = n(function(e, t, n) {
            if (!e) return n(e, "expected any character");
            return t(e.slice(1), e.charAt(0))
        });
        var m = n.all = n(function(e, t, n) {
            return t("", e)
        });
        var g = n.eof = n(function(e, t, n) {
            if (e) return n(e, "expected EOF");
            return t(e, e)
        })
    });
    var g = -1;
    var y = 1;
    var w = d(e, function(e) {
        e.insDirOf = function(e, t) {
            return e === g ? this.insertBefore(t.first()) : this.insertAfter(t.last())
        };
        e.insAtDirEnd = function(e, t) {
            return e === g ? this.prependTo(t) : this.appendTo(t)
        }
    });
    var E = d(function(e) {
        e.parent = 0;
        e[g] = 0;
        e[y] = 0;
        e.init = function(e, t, n) {
            this.parent = e;
            this[g] = t;
            this[y] = n
        }
    });
    var S = d(function(e) {
        e[g] = 0;
        e[y] = 0;
        e.parent = 0;
        e.init = function() {
            this.ends = {};
            this.ends[g] = 0;
            this.ends[y] = 0
        };
        e.children = function() {
            return x(this.ends[g], this.ends[y])
        };
        e.eachChild = function(e) {
            return this.children().each(e)
        };
        e.foldChildren = function(e, t) {
            return this.children().fold(e, t)
        };
        e.adopt = function(e, t, n) {
            x(this, this).adopt(e, t, n);
            return this
        };
        e.disown = function() {
            x(this, this).disown();
            return this
        }
    });
    var x = d(function(e) {
        function t(e, t, n) {
            p("a parent is always present", e);
            p("leftward is properly set up", function() {
                if (!t) return e.ends[g] === n;
                return t[y] === n && t.parent === e
            }());
            p("rightward is properly set up", function() {
                if (!n) return e.ends[y] === t;
                return n[g] === t && n.parent === e
            }())
        }
        e.init = function(e, t) {
            p("no half-empty fragments", !e === !t);
            this.ends = {};
            if (!e) return;
            p("left end node is passed to Fragment", e instanceof S);
            p("right end node is passed to Fragment", t instanceof S);
            p("leftEnd and rightEnd have the same parent", e.parent === t.parent);
            this.ends[g] = e;
            this.ends[y] = t
        };
        e.adopt = function(e, n, r) {
            t(e, n, r);
            var i = this;
            i.disowned = false;
            var s = i.ends[g];
            if (!s) return this;
            var o = i.ends[y];
            if (n) {} else {
                e.ends[g] = s
            }
            if (r) {
                r[g] = o
            } else {
                e.ends[y] = o
            }
            i.ends[y][y] = r;
            i.each(function(t) {
                t[g] = n;
                t.parent = e;
                if (n) n[y] = t;
                n = t
            });
            return i
        };
        e.disown = function() {
            var e = this;
            var n = e.ends[g];
            if (!n || e.disowned) return e;
            e.disowned = true;
            var r = e.ends[y];
            var i = n.parent;
            t(i, n[g], n);
            t(i, r, r[y]);
            if (n[g]) {
                n[g][y] = r[y]
            } else {
                i.ends[g] = r[y]
            }
            if (r[y]) {
                r[y][g] = n[g]
            } else {
                i.ends[y] = n[g]
            }
            return e
        };
        e.each = function(e) {
            var t = this;
            var n = t.ends[g];
            if (!n) return t;
            for (; n !== t.ends[y][y]; n = n[y]) {
                if (e.call(t, n) === false) break
            }
            return t
        };
        e.fold = function(e, t) {
            this.each(function(n) {
                e = t.call(this, e, n)
            });
            return e
        }
    });
    var T = function() {
        var e = 0;
        return function() {
            return e += 1
        }
    }();
    var N = d(S, function(e, t) {
        e.init = function(e) {
            t.init.call(this);
            this.id = T();
            N[this.id] = this
        };
        e.toString = function() {
            return "[MathElement " + this.id + "]"
        };
        e.bubble = function(e) {
            var t = l.call(arguments, 1);
            for (var n = this; n; n = n.parent) {
                var r = n[e] && n[e].apply(n, t);
                if (r === false) break
            }
            return this
        };
        e.postOrder = function(e) {
            var t = l.call(arguments, 1);
            if (typeof e === "string") {
                var n = e;
                e = function(e) {
                    if (n in e) e[n].apply(e, t)
                }
            }(function r(t) {
                t.eachChild(r);
                e(t)
            })(this)
        };
        e.jQ = w();
        e.jQadd = function(e) {
            this.jQ = this.jQ.add(e)
        };
        this.jQize = function(e) {
            var t = w(e);
            t.find("*").andSelf().each(function() {
                var e = w(this),
                    t = e.attr("mathquill-command-id"),
                    n = e.attr("mathquill-block-id");
                if (t) N[t].jQadd(e);
                if (n) N[n].jQadd(e)
            });
            return t
        };
        e.finalizeInsert = function() {
            var e = this;
            e.postOrder("finalizeTree");
            e.postOrder("blur");
            e.postOrder("respace");
            if (e[y].respace) e[y].respace();
            if (e[g].respace) e[g].respace();
            e.postOrder("redraw");
            e.bubble("redraw")
        }
    });
    var C = d(N, function(e, t) {
        e.init = function(e, n, r) {
            var i = this;
            t.init.call(i);
            if (!i.ctrlSeq) i.ctrlSeq = e;
            if (n) i.htmlTemplate = n;
            if (r) i.textTemplate = r
        };
        e.replaces = function(e) {
            e.disown();
            this.replacedFragment = e
        };
        e.isEmpty = function() {
            return this.foldChildren(true, function(e, t) {
                return e && t.isEmpty()
            })
        };
        e.parser = function() {
            var e = At.block;
            var t = this;
            return e.times(t.numBlocks()).map(function(e) {
                t.blocks = e;
                for (var n = 0; n < e.length; n += 1) {
                    e[n].adopt(t, t.ends[y], 0)
                }
                return t
            })
        };
        e.createLeftOf = function(e) {
            var t = this;
            var n = t.replacedFragment;
            t.createBlocks();
            N.jQize(t.html());
            if (n) {
                n.adopt(t.ends[g], 0, 0);
                n.jQ.appendTo(t.ends[g].jQ)
            }
            e.jQ.before(t.jQ);
            e[g] = t.adopt(e.parent, e[g], e[y]);
            t.finalizeInsert(e);
            t.placeCursor(e)
        };
        e.createBlocks = function() {
            var e = this,
                t = e.numBlocks(),
                n = e.blocks = Array(t);
            for (var r = 0; r < t; r += 1) {
                var i = n[r] = L();
                i.adopt(e, e.ends[y], 0)
            }
        };
        e.respace = c;
        e.placeCursor = function(e) {
            e.insAtRightEnd(this.foldChildren(this.ends[g], function(e, t) {
                return e.isEmpty() ? e : t
            }))
        };
        e.remove = function() {
            this.disown();
            this.jQ.remove();
            this.postOrder(function(e) {
                delete N[e.id]
            });
            return this
        };
        e.numBlocks = function() {
            var e = this.htmlTemplate.match(/&\d+/g);
            return e ? e.length : 0
        };
        e.html = function() {
            var e = this;
            var t = e.blocks;
            var n = " mathquill-command-id=" + e.id;
            if (a > 1 && e.ctrlSeq === "\\matrix") {
                var r = f.substring(0, f.indexOf("/table>") + 7);
                f = f.substring(f.indexOf("/table>") + 7);
                e.htmlTemplate = r
            }
            if (sizecases > 1 && e.ctrlSeq === "\\cases") {
                var i = caseString.substring(0, caseString.indexOf("/table>") + 7);
                caseString = caseString.substring(caseString.indexOf("/table>") + 7);
                e.htmlTemplate = i
            }
            var s = e.htmlTemplate.match(/<[^<>]+>|[^<>]+/g);
            p("no unmatched angle brackets", s.join("") === this.htmlTemplate);
            for (var o = 0, u = s[0]; u; o += 1, u = s[o]) {
                if (u.slice(-2) === "/>") {
                    s[o] = u.slice(0, -2) + n + "/>"
                } else if (u.charAt(0) === "<") {
                    p("not an unmatched top-level close tag", u.charAt(1) !== "/");
                    s[o] = u.slice(0, -1) + n + ">";
                    var l = 1;
                    do {
                        o += 1, u = s[o];
                        p("no missing close tags", u);
                        if (u.slice(0, 2) === "</") {
                            l -= 1
                        } else if (u.charAt(0) === "<" && u.slice(-2) !== "/>") {
                            l += 1
                        }
                    } while (l > 0)
                }
            }
            return s.join("").replace(/>&(\d+)/g, function(e, n) {
                return " mathquill-block-id=" + t[n].id + ">" + t[n].join("html")
            })
        };
        e.latex = function() {
            return this.foldChildren(this.ctrlSeq, function(e, t) {
                return e + "{" + (t.latex() || " ") + "}"
            })
        };
        e.textTemplate = [""];
        e.text = function() {
            var e = this,
                t = 0;
            return e.foldChildren(e.textTemplate[t], function(n, r) {
                t += 1;
                var i = r.text();
                if (n && e.textTemplate[t] === "(" && i[0] === "(" && i.slice(-1) === ")") return n + i.slice(1, -1) + e.textTemplate[t];
                return n + r.text() + (e.textTemplate[t] || "")
            })
        }
    });
    var k = d(C, function(e, t) {
        e.init = function(e, n, r) {
            if (!r) r = e && e.length > 1 ? e.slice(1) : e;
            t.init.call(this, e, n, [r])
        };
        e.parser = function() {
            return m.succeed(this)
        };
        e.numBlocks = function() {
            return 0
        };
        e.replaces = function(e) {
            e.remove()
        };
        e.createBlocks = c;
        e.latex = function() {
            return this.ctrlSeq
        };
        e.text = function() {
            return this.textTemplate
        };
        e.placeCursor = c;
        e.isEmpty = function() {
            return true
        }
    });
    var L = d(N, function(e) {
        e.join = function(e) {
            return this.foldChildren("", function(t, n) {
                return t + n[e]()
            })
        };
        e.latex = function() {
            return this.join("latex")
        };
        e.text = function() {
            return this.ends[g] === this.ends[y] ? this.ends[g].text() : "(" + this.join("text") + ")"
        };
        e.isEmpty = function() {
            return this.ends[g] === 0 && this.ends[y] === 0
        };
        e.write = function(e, t, n) {
            var r;
            if (t.match(/^[a-eg-zA-Z]$/)) r = Et(t);
            else if (r = P[t] || H[t]) r = r(t);
            else r = St(t);
            if (n) r.replaces(n);
            r.createLeftOf(e)
        };
        e.focus = function() {
            this.jQ.addClass("hasCursor");
            this.jQ.removeClass("empty");
            return this
        };
        e.blur = function() {
            this.jQ.removeClass("hasCursor");
            if (this.isEmpty()) this.jQ.addClass("empty");
            return this
        }
    });
    var A = d(x, function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, n || e);
            this.jQ = this.fold(w(), function(e, t) {
                return t.jQ.add(e)
            })
        };
        e.latex = function() {
            return this.fold("", function(e, t) {
                return e + t.latex()
            })
        };
        e.remove = function() {
            this.jQ.remove();
            this.each(function(e) {
                e.postOrder(function(e) {
                    delete N[e.id]
                })
            });
            return this.disown()
        }
    });
    var M = d(L, function(e, t) {
        e.latex = function() {
            return t.latex.call(this).replace(/(\\[a-z]+) (?![a-z])/ig, "$1")
        };
        e.text = function() {
            return this.foldChildren("", function(e, t) {
                return e + t.text()
            })
        };
        e.renderLatex = function(e) {
            var t = this.jQ;
            t.children().slice(1).remove();
            this.ends[g] = this.ends[y] = 0;
            delete this.cursor.selection;
            this.cursor.insAtRightEnd(this).writeLatex(e)
        };
        e.onKey = function(e, t) {
            switch (e) {
                case "Ctrl-Shift-Backspace":
                case "Ctrl-Backspace":
                    while (this.cursor[g] || this.cursor.selection) {
                        this.cursor.backspace()
                    }
                    break;
                case "Shift-Backspace":
                case "Backspace":
                    this.cursor.backspace();
                    break;
                case "Esc":
                case "Tab":
                case "Spacebar":
                    var n = this.cursor.parent;
                    if (n === this.cursor.root) {
                        if (e === "Spacebar") t.preventDefault();
                        return
                    }
                    this.cursor.prepareMove();
                    if (n[y]) {
                        this.cursor.insAtLeftEnd(n[y])
                    } else {
                        this.cursor.insRightOf(n.parent)
                    }
                    break;
                case "Shift-Tab":
                case "Shift-Esc":
                case "Shift-Spacebar":
                    var n = this.cursor.parent;
                    if (n === this.cursor.root) {
                        if (e === "Shift-Spacebar") t.preventDefault();
                        return
                    }
                    this.cursor.prepareMove();
                    if (n[g]) {
                        this.cursor.insAtRightEnd(n[g])
                    } else {
                        this.cursor.insLeftOf(n.parent)
                    }
                    break;
                case "Enter":
                    var n = this.cursor.parent;
                    if (n === this.cursor.root) {
                        if (e === "Enter") this.cursor.write("\\\\");
                        return
                    }
                    break;
                case "End":
                    this.cursor.prepareMove().insAtRightEnd(this.cursor.parent);
                    break;
                case "Ctrl-End":
                    this.cursor.prepareMove().insAtRightEnd(this);
                    break;
                case "Shift-End":
                    while (this.cursor[y]) {
                        this.cursor.selectRight()
                    }
                    break;
                case "Ctrl-Shift-End":
                    while (this.cursor[y] || this.cursor.parent !== this) {
                        this.cursor.selectRight()
                    }
                    break;
                case "Home":
                    this.cursor.prepareMove().insAtLeftEnd(this.cursor.parent);
                    break;
                case "Ctrl-Home":
                    this.cursor.prepareMove().insAtLeftEnd(this);
                    break;
                case "Shift-Home":
                    while (this.cursor[g]) {
                        this.cursor.selectLeft()
                    }
                    break;
                case "Ctrl-Shift-Home":
                    while (this.cursor[g] || this.cursor.parent !== this) {
                        this.cursor.selectLeft()
                    }
                    break;
                case "Left":
                    this.cursor.moveLeft();
                    break;
                case "Shift-Left":
                    this.cursor.selectLeft();
                    break;
                case "Ctrl-Left":
                    break;
                case "Right":
                    this.cursor.moveRight();
                    break;
                case "Shift-Right":
                    this.cursor.selectRight();
                    break;
                case "Ctrl-Right":
                    break;
                case "Up":
                    this.cursor.moveUp();
                    break;
                case "Down":
                    this.cursor.moveDown();
                    break;
                case "Shift-Up":
                    if (this.cursor[g]) {
                        while (this.cursor[g]) this.cursor.selectLeft()
                    } else {
                        this.cursor.selectLeft()
                    };
                case "Shift-Down":
                    if (this.cursor[y]) {
                        while (this.cursor[y]) this.cursor.selectRight()
                    } else {
                        this.cursor.selectRight()
                    };
                case "Ctrl-Up":
                    break;
                case "Ctrl-Down":
                    break;
                case "Ctrl-Shift-Del":
                case "Ctrl-Del":
                    while (this.cursor[y] || this.cursor.selection) {
                        this.cursor.deleteForward()
                    }
                    break;
                case "Shift-Del":
                case "Del":
                    this.cursor.deleteForward();
                    break;
                case "Meta-A":
                case "Ctrl-A":
                    if (this !== this.cursor.root) return;
                    this.cursor.prepareMove().insAtRightEnd(this);
                    while (this.cursor[g]) this.cursor.selectLeft();
                    break;
                default:
                    return false
            }
            t.preventDefault();
            return false
        };
        e.onText = function(e) {
            this.cursor.write(e);
            return false
        }
    });
    var _ = d(C, function(e, t) {
        e.init = function(e) {
            t.init.call(this, "$");
            this.cursor = e
        };
        e.htmlTemplate = '<span class="mathquill-rendered-math">&0</span>';
        e.createBlocks = function() {
            this.ends[g] = this.ends[y] = M();
            this.blocks = [this.ends[g]];
            this.ends[g].parent = this;
            this.ends[g].cursor = this.cursor;
            this.ends[g].write = function(e, t, n) {
                if (t !== "$") L.prototype.write.call(this, e, t, n);
                else if (this.isEmpty()) {
                    e.insRightOf(this.parent).backspace().show();
                    St("\\$", "$").createLeftOf(e)
                } else if (!e[y]) e.insRightOf(this.parent);
                else if (!e[g]) e.insLeftOf(this.parent);
                else L.prototype.write.call(this, e, t, n)
            }
        };
        e.latex = function() {
            return "$" + this.ends[g].latex() + "$"
        }
    });
    var D = d(L, function(e) {
        e.renderLatex = function(e) {
            var t = this;
            var n = t.cursor;
            t.jQ.children().slice(1).remove();
            t.ends[g] = t.ends[y] = 0;
            delete n.selection;
            n.show().insAtRightEnd(t);
            var r = m.regex;
            var i = m.string;
            var s = m.eof;
            var o = m.all;
            var u = i("$").then(At).skip(i("$").or(s)).map(function(e) {
                var t = _(n);
                t.createBlocks();
                var r = t.ends[g];
                e.children().adopt(r, 0, 0);
                return t
            });
            var a = i("\\$").result("$");
            var f = a.or(r(/^[^$]/)).map(St);
            var l = u.or(f).many();
            var c = l.skip(s).or(o.result(false)).parse(e);
            if (c) {
                for (var h = 0; h < c.length; h += 1) {
                    c[h].adopt(t, t.ends[y], 0)
                }
                var p = t.join("html");
                N.jQize(p).appendTo(t.jQ);
                this.finalizeInsert()
            }
        };
        e.onKey = function(e) {
            if (e === "Spacebar" || e === "Shift-Spacebar") return;
            M.prototype.onKey.apply(this, arguments)
        };
        e.onText = M.prototype.onText;
        e.write = function(e, t, n) {
            if (n) n.remove();
            if (t === "$") _(e).createLeftOf(e);
            else {
                var r;
                if (t === "<") r = "&lt;";
                else if (t === ">") r = "&gt;";
                St(t, r).createLeftOf(e)
            }
        }
    });
    var P = {},
        H = {};
    var B, j = c,
        F = document.createElement("div"),
        I = F.style,
        q = {
            transform: 1,
            WebkitTransform: 1,
            MozTransform: 1,
            OTransform: 1,
            msTransform: 1
        },
        R;
    for (var U in q) {
        if (U in I) {
            R = U;
            break
        }
    }
    if (R) {
        B = function(e, t, n) {
            e.css(R, "scale(" + t + "," + n + ")")
        }
    } else if ("filter" in I) {
        j = function(e) {
            e.className = e.className
        };
        B = function(e, t, n) {
            function i() {
                e.css("marginRight", (r.width() - 1) * (t - 1) / t + "px")
            }
            t /= 1 + (n - 1) / 2;
            e.css("fontSize", n + "em");
            if (!e.hasClass("matrixed-container")) {
                e.addClass("matrixed-container").wrapInner('<span class="matrixed"></span>')
            }
            var r = e.children().css("filter", "progid:DXImageTransform.Microsoft" + ".Matrix(M11=" + t + ",SizingMethod='auto expand')");
            i();
            var s = setInterval(i);
            w(window).load(function() {
                clearTimeout(s);
                i()
            })
        }
    } else {
        B = function(e, t, n) {
            e.css("fontSize", n + "em")
        }
    }
    var z = d(C, function(e, t) {
        e.init = function(e, n, r) {
            t.init.call(this, e, "<" + n + " " + r + ">&0</" + n + ">")
        }
    });
    H.mathrm = h(z, "\\mathrm", "span", 'class="roman font "');
    H.mathit = h(z, "\\mathit", "i", 'class="font"');
    H.mathbf = h(z, "\\mathbf", "b", 'class="font"');
    H.mathsf = h(z, "\\mathsf", "span", 'class="sans-serif font"');
    H.mathtt = h(z, "\\mathtt", "span", 'class="monospace font"');
    H.underline = h(z, "\\underline", "span", 'class="non-leaf underline"');
    H.overline = H.bar = h(z, "\\overline", "span", 'class="non-leaf overline"');
    var W = d(C, function(e, t) {
        e.init = function(e, n, r) {
            t.init.call(this, e, "<" + n + ' class="non-leaf">&0</' + n + ">", [r])
        };
        e.finalizeTree = function() {
            function e(e) {
                var t = this.parent,
                    n = e;
                do {
                    if (n[y]) {
                        e.insLeftOf(t);
                        return false
                    }
                    n = n.parent.parent
                } while (n !== t);
                e.insRightOf(t);
                return false
            }
            p("SupSub is only _ and ^", this.ctrlSeq === "^" || this.ctrlSeq === "_");
            if (this.ctrlSeq === "_") {
                this.down = this.ends[g];
                this.ends[g].up = e
            } else {
                this.up = this.ends[g];
                this.ends[g].down = e
            }
        };
        e.latex = function() {
            var e = this.ends[g].latex();
            if (e.length === 1) return this.ctrlSeq + e;
            else return this.ctrlSeq + "{" + (e || " ") + "}"
        };
        e.redraw = function() {
            if (this[g]) this[g].respace();
            if (!(this[g] instanceof W)) {
                this.respace();
                if (this[y] && !(this[y] instanceof W)) this[y].respace()
            }
        };
        e.respace = function() {
            if (this[g].ctrlSeq === "\\int\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\int\\limits " || this[g].ctrlSeq === "\\oint\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\oint\\limits " || this[g].ctrlSeq === "\\iint\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\iint\\limits " || this[g].ctrlSeq === "\\iiint\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\iiint\\limits " || this[g].ctrlSeq === "\\iiiint\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\iiiint\\limits " || this[g].ctrlSeq === "\\sum\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\sum\\limits " || this[g].ctrlSeq === "\\lim\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\lim\\limits " || this[g].ctrlSeq === "\\prod\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\prod\\limits " || this[g].ctrlSeq === "\\coprod\\limits " || this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && this[g][g] && this[g][g].ctrlSeq === "\\coprod\\limits ") {
                if (!this.limit) {
                    this.limit = true;
                    this.jQ.addClass("limit")
                }
            } else {
                if (this.limit) {
                    this.limit = false;
                    this.jQ.removeClass("limit")
                }
            }
            if (this[g] !== 0) {
                var e = this[g].ctrlSeq
            }
            this.respaced = this[g] instanceof W && this[g].ctrlSeq != this.ctrlSeq && !this[g].respaced;
            if (this.respaced) {
                var t = +this.jQ.css("fontSize").slice(0, -2),
                    n = this[g].jQ.outerWidth(),
                    r = this.jQ.outerWidth();
                if (this[g][g] !== 0) {
                    var i = this[g][g].ctrlSeq
                }
                if (this[g][g] !== 0) {
                    var o = this[g][g].jQ.outerWidth();
                    o = o / 3
                }
                if (this[g][g] !== 0 && this[g][g][y] !== 0) {
                    var u = this[g][g][y].jQ.outerWidth()
                }
                if (typeof i !== "undefined") {
                    if (i === "\\int\\limits " || i === "\\iint\\limits " || i === "\\iiint\\limits " || i === "\\iiiint\\limits ") {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.99 : 0) - o / t - r / 2 / 10 / 10 + "em",
                            marginRight: -(.1 + r / 2 / 10) + "em"
                        });
                        this[g][g][y].jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.49 : 0) - o / t + "em",
                            marginRight: -(-.5 + u / 2 / 10) + "em"
                        })
                    } else if (i === "\\oint\\limits ") {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -1 : 0) - o / t + "em",
                            marginRight: -(.1 + r / 2 / 10) + "em"
                        });
                        this[g][g][y].jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.49 : 0) - o / t + "em",
                            marginRight: -(-.5 + u / 2 / 10) + "em"
                        })
                    } else if (i === "\\sum\\limits ") {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.99 : 0) - o / t + "em",
                            marginRight: -(.1 + r / 2 / 10) + "em"
                        });
                        this[g][g][y].jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.49 : 0) - o / t + "em",
                            marginRight: -(-.5 + u / 2 / 10) + "em"
                        })
                    } else if (i === "\\prod\\limits ") {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.99 : 0) - o / t + "em",
                            marginRight: -(.1 + r / 2 / 10) + "em"
                        });
                        this[g][g][y].jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.39 : 0) - o / t + "em",
                            marginRight: -(-.5 + u / 2 / 10) + "em"
                        })
                    } else if (i === "\\coprod\\limits ") {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.99 : 0) - o / t + "em",
                            marginRight: -(.1 + r / 2 / 10) + "em"
                        });
                        this[g][g][y].jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.39 : 0) - o / t + "em",
                            marginRight: -(-.5 + u / 2 / 10) + "em"
                        })
                    } else {
                        this.jQ.css({
                            left: (this.limit && this.ctrlSeq === "_" ? -.25 : 0) - n / t + "em",
                            marginRight: .1 - s(r, n) / t + "em"
                        })
                    }
                } else {
                    this.jQ.css({
                        left: (this.limit && this.ctrlSeq === "_" ? -.25 : 0) - n / t + "em",
                        marginRight: .1 - s(r, n) / t + "em"
                    })
                }
            } else if (this.limit && this.ctrlSeq === "_") {
                if (e === "\\lim\\limits ") {
                    var t = +this.jQ.css("fontSize").slice(0, -2),
                        o = this[g].jQ.outerWidth() / 3,
                        r = this.jQ.outerWidth();
                    this.jQ.css({
                        left: (this.limit && this.ctrlSeq === "_" ? -.49 : 0) - o / t - r / 2 / 10 / 5 + "em",
                        marginRight: .6 - r / 2 / 10 + "em"
                    })
                } else {
                    this.jQ.css({
                        left: "-.25em",
                        marginRight: ""
                    })
                }
            } else {
                this.jQ.css({
                    left: "",
                    marginRight: ""
                })
            }
            if (this[y] instanceof W) this[y].respace();
            return this
        }
    });
    H.subscript = H._ = h(W, "_", "sub", "_");
    H.superscript = H.supscript = H["^"] = h(W, "^", "sup", "**");
    var X = H.frac = H.dfrac = H.cfrac = H.fraction = d(C, function(e, t) {
        e.ctrlSeq = "\\frac";
        e.htmlTemplate = '<span class="fraction non-leaf">' + '<span class="numerator">&0</span>' + '<span class="denominator ">&1</span>' + '<span style="display:inline-block;width:0">&nbsp;</span>' + "</span>";
        e.textTemplate = ["(", "/", ")"];
        e.finalizeTree = function() {
            this.up = this.ends[y].up = this.ends[g];
            this.down = this.ends[g].down = this.ends[y]
        }
    });
    var V = H.xleftarrow = d(C, function(e, t) {
        e.ctrlSeq = "\\xleftarrow";
        e.htmlTemplate = '<span class="fraction non-leaf">' + '<span class="xleftover">&0</span>' + '<span class="lefttriangel"></span> ' + '<span class="xleftbelow ">&1</span>' + '<span style="display:inline-block;width:0">&nbsp;</span>' + "</span>";
        e.textTemplate = ["xleftarrow[", "](", ")"];
        e.parser = function() {
            return At.optBlock.then(function(e) {
                return At.block.map(function(t) {
                    var n = V();
                    n.blocks = [t, e];
                    e.adopt(n, 0, 0);
                    t.adopt(n, e, 0);
                    return n
                })
            }).or(t.parser.call(this))
        };
        e.finalizeTree = function() {
            this.up = this.ends[y].up = this.ends[g];
            this.down = this.ends[g].down = this.ends[y]
        };
        e.latex = function() {
            return "\\xleftarrow[" + this.ends[y].latex() + "]{" + this.ends[g].latex() + "}"
        }
    });
    var $ = H.xrightarrow = d(C, function(e, t) {
        e.ctrlSeq = "\\xrightarrow";
        e.htmlTemplate = '<span class="fraction non-leaf">' + '<span class="xrightover">&0</span>' + '<span class="righttriangel"></span> ' + '<span class="xrightbelow ">&1</span>' + '<span style="display:inline-block;width:0">&nbsp;</span>' + "</span>";
        e.textTemplate = ["xrightarrow[", "](", ")"];
        e.parser = function() {
            return At.optBlock.then(function(e) {
                return At.block.map(function(t) {
                    var n = $();
                    n.blocks = [t, e];
                    e.adopt(n, 0, 0);
                    t.adopt(n, e, 0);
                    return n
                })
            }).or(t.parser.call(this))
        };
        e.finalizeTree = function() {
            this.up = this.ends[y].up = this.ends[g];
            this.down = this.ends[g].down = this.ends[y]
        };
        e.latex = function() {
            return "\\xrightarrow[" + this.ends[y].latex() + "]{" + this.ends[g].latex() + "}"
        }
    });
    var J = H.over = P["/"] = d(X, function(e, t) {
        e.createLeftOf = function(e) {
            if (!this.replacedFragment) {
                var n = e[g];
                while (n && !(n instanceof Nt || n instanceof dt || n instanceof kt || ",;:".split("").indexOf(n.ctrlSeq) > -1)) n = n[g];
                if (n instanceof kt && n[y] instanceof W) {
                    n = n[y];
                    if (n[y] instanceof W && n[y].ctrlSeq != n.ctrlSeq) n = n[y]
                }
                if (n !== e[g]) {
                    this.replaces(A(n[y] || e.parent.ends[g], e[g]));
                    e[g] = n
                }
            }
            t.createLeftOf.call(this, e)
        }
    });
    var K = H.sqrt = H["âˆš"] = d(C, function(e, t) {
        e.ctrlSeq = "\\sqrt";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="scaled sqrt-prefix">&radic;</span>' + '<span class="non-leaf sqrt-stem">&0</span>' + "</span>";
        e.textTemplate = ["sqrt(", ")"];
        e.parser = function() {
            return At.optBlock.then(function(e) {
                return At.block.map(function(t) {
                    var n = ut();
                    n.blocks = [e, t];
                    e.adopt(n, 0, 0);
                    t.adopt(n, e, 0);
                    return n
                })
            }).or(t.parser.call(this))
        };
        e.redraw = function() {
            var e = this.ends[y].jQ;
            B(e.prev(), 1, e.innerHeight() / +e.css("fontSize").slice(0, -2) - .1)
        }
    });
    var Q = H.underrightarrow = d(C, function(e, t) {
        e.ctrlSeq = "\\underrightarrow";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="underright-stem">&0</span>' + '<span class="scaled underright-prefix">&rarr;</span>' + "</span>";
        e.textTemplate = ["underright(", ")"];
        e.redraw = function() {
            var e = this.ends[y].jQ;
            var t = e.outerWidth() / +e.css("fontSize").slice(0, -2);
            B(e.next(), t * .7, 1)
        }
    });
    var G = H.overrightarrow = d(C, function(e, t) {
        e.ctrlSeq = "\\overrightarrow";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="scaled overright-prefix">&rarr;</span>' + '<span class="overright-stem">&0</span>' + "</span>";
        e.textTemplate = ["overright(", ")"];
        e.redraw = function() {
            var e = this.ends[y].jQ;
            var t = e.outerWidth() / +e.css("fontSize").slice(0, -2);
            B(e.prev(), t * .7, 1)
        }
    });
    var Y = H.vec = d(C, function(e, t) {
        e.ctrlSeq = "\\vec";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="vector-prefix">&rarr;</span>' + '<span class="vector-stem">&0</span>' + "</span>";
        e.textTemplate = ["vec(", ")"]
    });
    var Z = H.hat = H["hat"] = d(C, function(e, t) {
        e.ctrlSeq = "\\hat";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="hat-prefix">&#94;</span>' + '<span class="vector-stem">&0</span>' + "</span>";
        e.textTemplate = ["hat{", "}"]
    });
    var et = H.widehat = H["widehat"] = d(C, function(e, t) {
        e.ctrlSeq = "\\widehat";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="widehat-prefix">&#94;</span>' + '<span class="vector-stem">&0</span>' + "</span>";
        e.textTemplate = ["widehat{", "}"]
    });
    var tt = H.tilde = H["tilde"] = d(C, function(e, t) {
        e.ctrlSeq = "\\tilde";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="tilde-prefix">&#126;</span>' + '<span class="vector-stem">&0</span>' + "</span>";
        e.textTemplate = ["tilde{", "}"]
    });
    var nt = H.widetilde = H["widetilde"] = d(C, function(e, t) {
        e.ctrlSeq = "\\widetilde";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="widetilde-prefix">&#126;</span>' + '<span class="vector-stem">&0</span>' + "</span>";
        e.textTemplate = ["widetilde{", "}"]
    });
    var rt = null;
    var it = H.cases = d(C, function(e, t) {
        e.ctrlSeq = "\\cases";
        e.htmlTemplate = "";
        e.latex = function() {
            var e = this.foldChildren([], function(e, t) {
                e.push(t.latex());
                return e
            });
            var t = "\\begin{cases}";
            var n = this.blocks.length;
            var r = this.jQ[0].rows.length;
            var i = n / r;
            for (var s = 0; s < e.length; s++) {
                if (s % i == 0 && s != 0) {
                    t += "\\\\"
                }
                t += e[s];
                if ((s + 1) % i != 0) {
                    t += "&"
                }
            }
            t += "\\end{cases}";
            return t
        };
        e.text = function() {
            return "[" + this.foldChildren([], function(e, t) {
                e.push(t.text());
                return e
            }).join() + "]"
        };
        e.setSize = rt = function(t, n) {
            e.columns = n;
            var r = '<table class="mtable non-leaf">';
            var i = 0;
            for (var s = 0; s < t; s++) {
                r += '<tr class="mtr non-leaf">';
                for (var o = 0; o < n; o++) {
                    r += '<td class="mtd"><span>&' + i + "</span></td>";
                    i++
                }
                r += "</tr>"
            }
            r += "</table>";
            sizecases++;
            caseString += r;
            e.htmlTemplate = caseString
        };
        e.parser = function() {
            return m.succeed(this)
        }
    });
    var st = null;
    var ot = H.matrix = d(C, function(e, t) {
        e.ctrlSeq = "\\matrix";
        e.htmlTemplate = "";
        e.latex = function() {
            var e = this.foldChildren([], function(e, t) {
                e.push(t.latex());
                return e
            });
            var t = "\\begin{matrix}";
            var n = this.blocks.length;
            var r = this.jQ[0].rows.length;
            var i = n / r;
            for (var s = 0; s < e.length; s++) {
                if (s % i == 0 && s != 0) {
                    t += "\\\\"
                }
                t += e[s];
                if ((s + 1) % i != 0) {
                    t += "&"
                }
            }
            t += "\\end{matrix}";
            return t
        };
        e.text = function() {
            return "[" + this.foldChildren([], function(e, t) {
                e.push(t.text());
                return e
            }).join() + "]"
        };
        e.setSize = st = function(t, n) {
            e.columns = n;
            var r = '<table class="mtable non-leaf">';
            var i = 0;
            for (var s = 0; s < t; s++) {
                r += '<tr class="mtr non-leaf">';
                for (var o = 0; o < n; o++) {
                    r += '<td class="mtd"><span>&' + i + "</span></td>";
                    i++
                }
                r += "</tr>"
            }
            r += "</table>";
            a++;
            f += r;
            e.htmlTemplate = f
        };
        e.parser = function() {
            return m.succeed(this)
        }
    });
    var ut = H.nthroot = d(K, function(e, t) {
        e.htmlTemplate = '<sup class="nthroot non-leaf">&0</sup>' + '<span class="scaled">' + '<span class="sqrt-prefix scaled">&radic;</span>' + '<span class="sqrt-stem non-leaf">&1</span>' + "</span>";
        e.textTemplate = ["sqrt[", "](", ")"];
        e.latex = function() {
            return "\\sqrt[" + this.ends[g].latex() + "]{" + this.ends[y].latex() + "}"
        }
    });
    var at = d(C, function(e, t) {
        e.init = function(e, n, r, i) {
            t.init.call(this, "\\left" + r, '<span class="non-leaf">' + '<span class="scaled paren">' + e + "</span>" + '<span class="non-leaf">&0</span>' + '<span class="scaled paren">' + n + "</span>" + "</span>", [e, n]);
            this.end = "\\right" + i
        };
        e.jQadd = function() {
            t.jQadd.apply(this, arguments);
            var e = this.jQ;
            this.bracketjQs = e.children(":first").add(e.children(":last"))
        };
        e.latex = function() {
            return this.ctrlSeq + this.ends[g].latex() + this.end
        };
        e.redraw = function() {
            var e = this.ends[g].jQ;
            var t = e.outerHeight() / +e.css("fontSize").slice(0, -2);
            B(this.bracketjQs, s(1 + .2 * (t - 1), 1.2), 1.05 * t)
        }
    });
    H.left = d(C, function(e) {
        e.parser = function() {
            var e = m.regex;
            var t = m.string;
            var n = m.succeed;
            var r = m.optWhitespace;
            return r.then(e(/^(?:[([|]|\\\{)/)).then(function(i) {
                if (i.charAt(0) === "\\") i = i.slice(1);
                var s = P[i]();
                return At.map(function(e) {
                    s.blocks = [e];
                    e.adopt(s, 0, 0)
                }).then(t("\\right")).skip(r).then(e(/^(?:[\])|]|\\\})/)).then(function(e) {
                    if (e.slice(-1) !== s.end.slice(-1)) {
                        return m.fail("open doesn't match close")
                    }
                    return n(s)
                })
            })
        }
    });
    H.right = d(C, function(e) {
        e.parser = function() {
            return m.fail("unmatched \\right")
        }
    });
    H.lbrace = P["{"] = h(at, "{", "}", "\\{", "\\}");
    H.langle = H.lang = h(at, "&lang;", "&rang;", "\\langle ", "\\rangle ");
    var ft = d(at, function(e, t) {
        e.createLeftOf = function(e) {
            if (!e[y] && e.parent.parent && e.parent.parent.end === this.end && !this.replacedFragment) e.insRightOf(e.parent.parent);
            else t.createLeftOf.call(this, e)
        };
        e.placeCursor = function(e) {
            this.ends[g].blur();
            e.insRightOf(this)
        }
    });
    H.rbrace = P["}"] = h(ft, "{", "}", "\\{", "\\}");
    H.rangle = H.rang = h(ft, "&lang;", "&rang;", "\\langle ", "\\rangle ");
    var lt = function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, n, e, n)
        }
    };
    var ct = d(at, lt);
    H.lparen = P["("] = h(ct, "(", ")");
    H.lbrack = H.lbracket = P["["] = h(ct, "[", "]");
    var ht = d(ft, lt);
    H.rparen = P[")"] = h(ht, "(", ")");
    H.rbrack = H.rbracket = P["]"] = h(ht, "[", "]");
    var pt = H.lpipe = H.rpipe = P["|"] = d(ct, function(e, t) {
        e.init = function() {
            t.init.call(this, "|", "|")
        };
        e.createLeftOf = ft.prototype.createLeftOf
    });
    var dt = P.$ = H.text = H.textnormal = H.textrm = H.textup = H.textmd = d(C, function(e, t) {
        e.ctrlSeq = "\\text";
        e.htmlTemplate = '<span class="text">&0</span>';
        e.replaces = function(e) {
            if (e instanceof A) this.replacedText = e.remove().jQ.text();
            else if (typeof e === "string") this.replacedText = e
        };
        e.textTemplate = ['"', '"'];
        e.parser = function() {
            var e = this;
            var t = m.string;
            var n = m.regex;
            var r = m.optWhitespace;
            return r.then(t("{")).then(n(/^[^}]*/)).skip(t("}")).map(function(t) {
                e.createBlocks();
                var n = e.ends[g];
                for (var r = 0; r < t.length; r += 1) {
                    var i = St(t.charAt(r));
                    i.adopt(n, n.ends[y], 0)
                }
                return e
            })
        };
        e.createBlocks = function() {
            this.ends[g] = this.ends[y] = vt();
            this.blocks = [this.ends[g]];
            this.ends[g].parent = this
        };
        e.finalizeInsert = function() {
            this.ends[g].blur = function() {
                delete this.blur;
                return this
            };
            t.finalizeInsert.call(this)
        };
        e.createLeftOf = function(e) {
            t.createLeftOf.call(this, this.cursor = e);
            if (this.replacedText)
                for (var n = 0; n < this.replacedText.length; n += 1) this.ends[g].write(e, this.replacedText.charAt(n))
        }
    });
    var vt = d(L, function(e, t) {
        e.onKey = function(e, t) {
            if (e === "Spacebar" || e === "Shift-Spacebar") return false
        };
        e.deleteOutOf = function(e, t) {
            if (this.isEmpty()) t.insRightOf(this.parent)
        };
        e.write = function(e, t, n) {
            if (n) n.remove();
            if (t !== "$") {
                var r;
                if (t === "<") r = "&lt;";
                else if (t === ">") r = "&gt;";
                St(t, r).createLeftOf(e)
            } else if (this.isEmpty()) {
                e.insRightOf(this.parent).backspace();
                St("\\$", "$").createLeftOf(e)
            } else if (!e[y]) e.insRightOf(this.parent);
            else if (!e[g]) e.insLeftOf(this.parent);
            else {
                var i = dt();
                i.replaces(A(e[y], this.ends[y]));
                e.insRightOf(this.parent);
                i.adopt = function() {
                    delete this.adopt;
                    this.adopt.apply(this, arguments);
                    this[g] = 0
                };
                i.createLeftOf(e);
                i[g] = this.parent;
                e.insLeftOf(i)
            }
            return false
        };
        e.blur = function() {
            this.jQ.removeClass("hasCursor");
            if (this.isEmpty()) {
                var e = this.parent,
                    t = e.cursor;
                if (t.parent === this) this.jQ.addClass("empty");
                else {
                    t.hide();
                    e.remove();
                    if (t[y] === e) t[y] = e[y];
                    else if (t[g] === e) t[g] = e[g];
                    t.show().parent.bubble("redraw")
                }
            }
            return this
        };
        e.focus = function() {
            t.focus.call(this);
            var e = this.parent;
            if (e[y].ctrlSeq === e.ctrlSeq) {
                var n = this,
                    r = e.cursor,
                    i = e[y].ends[g];
                i.eachChild(function(e) {
                    e.parent = n;
                    e.jQ.appendTo(n.jQ)
                });
                if (this.ends[y]) this.ends[y][y] = i.ends[g];
                else this.ends[g] = i.ends[g];
                i.ends[g][g] = this.ends[y];
                this.ends[y] = i.ends[y];
                i.parent.remove();
                if (r[g]) r.insRightOf(r[g]);
                else r.insAtLeftEnd(this);
                r.parent.bubble("redraw")
            } else if (e[g].ctrlSeq === e.ctrlSeq) {
                var r = e.cursor;
                if (r[g]) e[g].ends[g].focus();
                else r.insAtRightEnd(e[g].ends[g])
            }
            return this
        }
    });
    H.em = H.italic = H.italics = H.emph = H.textit = H.textsl = mt("\\textit", "i", 'class="text"');
    H.strong = H.bold = H.textbf = mt("\\textbf", "b", 'class="text"');
    H.sf = H.textsf = mt("\\textsf", "span", 'class="sans-serif text"');
    H.tt = H.texttt = mt("\\texttt", "span", 'class="monospace text"');
    H.textsc = mt("\\textsc", "span", 'style="font-variant:small-caps" class="text"');
    H.uppercase = mt("\\uppercase", "span", 'style="text-transform:uppercase" class="text"');
    H.lowercase = mt("\\lowercase", "span", 'style="text-transform:lowercase" class="text"');
    var gt = P["\\"] = d(C, function(e, t) {
        e.ctrlSeq = "\\";
        e.replaces = function(e) {
            this._0 = e.disown();
            this.isEmpty = function() {
                return false
            }
        };
        e.htmlTemplate = '<span class="latex-command-input non-leaf">\\<span>&0</span></span>';
        e.textTemplate = ["\\"];
        e.createBlocks = function() {
            t.createBlocks.call(this);
            this.ends[g].focus = function() {
                this.parent.jQ.addClass("hasCursor");
                if (this.isEmpty()) this.parent.jQ.removeClass("empty");
                return this
            };
            this.ends[g].blur = function() {
                this.parent.jQ.removeClass("hasCursor");
                if (this.isEmpty()) this.parent.jQ.addClass("empty");
                return this
            }
        };
        e.createLeftOf = function(e) {
            t.createLeftOf.call(this, e);
            this.cursor = e.insAtRightEnd(this.ends[g]);
            if (this._0) {
                var n = this.jQ[0];
                this.jQ = this._0.jQ.addClass("blur").bind("mousedown mousemove", function(e) {
                    w(e.target = n).trigger(e);
                    return false
                }).insertBefore(this.jQ).add(this.jQ)
            }
            this.ends[g].write = function(e, t, n) {
                if (n) n.remove();
                if (t.match(/[a-z]/i)) St(t).createLeftOf(e);
                else {
                    this.parent.renderCommand();
                    if (t !== "\\" || !this.isEmpty()) this.parent.parent.write(e, t)
                }
            }
        };
        e.latex = function() {
            return "\\" + this.ends[g].latex() + " "
        };
        e.onKey = function(e, t) {
            if (e === "Tab" || e === "Enter" || e === "Spacebar") {
                this.renderCommand();
                t.preventDefault();
                return false
            }
        };
        e.renderCommand = function() {
            this.jQ = this.jQ.last();
            this.remove();
            if (this[y]) {
                this.cursor.insLeftOf(this[y])
            } else {
                this.cursor.insAtRightEnd(this.parent)
            }
            var e = this.ends[g].latex(),
                t;
            if (!e) e = "backslash";
            this.cursor.insertCmd(e, this._0)
        }
    });
    var yt = H.hept = d(C, function(e, t) {
        e.ctrlSeq = "\\hept";
        e.htmlTemplate = '<span class="non-leaf">' + '<span class="paren scaled">{</span>' + '<span class="array non-leaf">' + "<span>&0</span>" + "</span>" + "</span>";
        e.textTemplate = ["choose(", ",", ")"];
        e.redraw = function() {
            var e = this.jQ.eq(-1);
            var t = this.jQ;
            var n = e.outerHeight() / +e.css("fontSize").slice(0, -2);
            var r = t.children(":first");
            B(r, s(1 + .2 * (n - 1), 1.2), 1.05 * n)
        }
    });
    var bt = H.binom = H.binomial = d(C, function(e, t) {
        e.ctrlSeq = "\\binom";
        e.htmlTemplate = '<span class="paren scaled">(</span>' + '<span class="non-leaf">' + '<span class="array non-leaf">' + "<span>&0</span>" + "<span>&1</span>" + "</span>" + "</span>" + '<span class="paren scaled">)</span>';
        e.textTemplate = ["choose(", ",", ")"];
        e.redraw = function() {
            var e = this.jQ.eq(1);
            var t = e.outerHeight() / +e.css("fontSize").slice(0, -2);
            var n = this.jQ.filter(".paren");
            B(n, s(1 + .2 * (t - 1), 1.2), 1.05 * t)
        }
    });
    var wt = H.choose = d(bt, function(e) {
        e.createLeftOf = J.prototype.createLeftOf
    });
    H.editable = d(_, function(e, t) {
        e.init = function() {
            C.prototype.init.call(this, "\\editable")
        };
        e.jQadd = function() {
            var e = this;
            t.jQadd.apply(e, arguments);
            var n = e.ends[g].disown();
            var r = e.jQ.children().detach();
            e.ends[g] = e.ends[y] = M();
            e.blocks = [e.ends[g]];
            e.ends[g].parent = e;
            O(e.jQ, e.ends[g], false, true);
            e.cursor = e.ends[g].cursor;
            n.children().adopt(e.ends[g], 0, 0);
            r.appendTo(e.ends[g].jQ);
            e.ends[g].cursor.insAtRightEnd(e.ends[g])
        };
        e.latex = function() {
            return this.ends[g].latex()
        };
        e.text = function() {
            return this.ends[g].text()
        }
    });
    H.f = h(k, "f", '<var class="florin">&fnof;</var><span style="display:inline-block;width:0">&nbsp;</span>');
    var Et = d(k, function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, "<var>" + (n || e) + "</var>")
        };
        e.text = function() {
            var e = this.ctrlSeq;
            if (this[g] && !(this[g] instanceof Et) && !(this[g] instanceof Nt)) e = "*" + e;
            if (this[y] && !(this[y] instanceof Nt) && !(this[y].ctrlSeq === "^")) e += "*";
            return e
        }
    });
    var St = d(k, function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, "<span>" + (n || e) + "</span>")
        }
    });
    H["kksp"] = P[" "] = h(St, "\\:", " ");
    H.prime = P["'"] = h(St, "'", "&prime;");
    var xt = d(k, function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, '<span class="nonSymbola">' + (n || e) + "</span>")
        }
    });
    H["@"] = xt;
    H["&"] = h(xt, "\\&", "&");
    H["%"] = h(xt, "\\%", "%");
    H.alpha = H.beta = H.gamma = H.delta = H.zeta = H.eta = H.theta = H.iota = H.kappa = H.mu = H.nu = H.xi = H.rho = H.sigma = H.tau = H.chi = H.psi = H.omega = d(Et, function(e, t) {
        e.init = function(e) {
            t.init.call(this, "\\" + e + " ", "&" + e + ";")
        }
    });
    H.phi = h(Et, "\\phi ", "&#981;");
    H.phiv = H.varphi = h(Et, "\\varphi ", "&phi;");
    H.epsilon = h(Et, "\\epsilon ", "&#1013;");
    H.epsiv = H.varepsilon = h(Et, "\\varepsilon ", "&epsilon;");
    H.piv = H.varpi = h(Et, "\\varpi ", "&piv;");
    H.sigmaf = H.sigmav = H.varsigma = h(Et, "\\varsigma ", "&sigmaf;");
    H.thetav = H.vartheta = H.thetasym = h(Et, "\\vartheta ", "&thetasym;");
    H.upsilon = H.upsi = h(Et, "\\upsilon ", "&upsilon;");
    H.gammad = H.Gammad = H.digamma = h(Et, "\\digamma ", "&#989;");
    H.kappav = H.varkappa = h(Et, "\\varkappa ", "&#1008;");
    H.rhov = H.varrho = h(Et, "\\varrho ", "&#1009;");
    H.pi = H["Ï€"] = h(xt, "\\pi ", "&pi;");
    H.lambda = h(xt, "\\lambda ", "&lambda;");
    H.Upsilon = H.Upsi = H.upsih = H.Upsih = h(k, "\\Upsilon ", '<var style="font-family: serif">&upsih;</var>');
    H.Gamma = H.Delta = H.Theta = H.Lambda = H.Xi = H.Pi = H.Sigma = H.Phi = H.Psi = H.Omega = H.forall = d(St, function(e, t) {
        e.init = function(e) {
            t.init.call(this, "\\" + e + " ", "&" + e + ";")
        }
    });
    var Tt = d(C, function(e) {
        e.init = function(e) {
            this.latex = e
        };
        e.createLeftOf = function(e) {
            e.writeLatex(this.latex)
        };
        e.parser = function() {
            var e = At.parse(this.latex).children();
            return m.succeed(e)
        }
    });
    H["Â¹"] = h(Tt, "^1");
    H["Â²"] = h(Tt, "^2");
    H["Â³"] = h(Tt, "^3");
    H["Â¼"] = h(Tt, "\\frac14");
    H["Â½"] = h(Tt, "\\frac12");
    H["Â¾"] = h(Tt, "\\frac34");
    var Nt = d(k, function(e, t) {
        e.init = function(e, n, r) {
            t.init.call(this, e, '<span class="binary-operator">' + n + "</span>", r)
        }
    });
    var Ct = d(Nt, function(e) {
        e.init = St.prototype.init;
        e.respace = function() {
            if (!this[g]) {
                this.jQ[0].className = ""
            } else if (this[g] instanceof Nt && this[y] && !(this[y] instanceof Nt)) {
                this.jQ[0].className = "unary-operator"
            } else {
                this.jQ[0].className = "binary-operator"
            }
            return this
        }
    });
    H["+"] = h(Ct, "+", "+");
    H["â€“"] = H["-"] = h(Ct, "-", "&minus;");
    H["Â±"] = H.pm = H.plusmn = H.plusminus = h(Ct, "\\pm ", "&plusmn;");
    H.mp = H.mnplus = H.minusplus = h(Ct, "\\mp ", "&#8723;");
    P["*"] = H.sdot = H.cdot = h(Nt, "\\cdot ", "&middot;");
    H["="] = h(Nt, "=", "=");
    H["<"] = h(Nt, "<", "&lt;");
    H[">"] = h(Nt, ">", "&gt;");
    H.notin = H.sim = H.cong = H.equiv = H.oplus = H.otimes = d(Nt, function(e, t) {
        e.init = function(e) {
            t.init.call(this, "\\" + e + " ", "&" + e + ";")
        }
    });
    H.times = h(Nt, "\\times ", "&times;", "[x]");
    H["Ã·"] = H.div = H.divide = H.divides = h(Nt, "\\div ", "&divide;", "[/]");
    H["â‹‡"] = H.divideontimes = h(Nt, "\\divideontimes ", "&#8903;", "[â‹‡]");
    H["âˆ”"] = H.dotplus = h(Nt, "\\dotplus ", "&#8724;", "âˆ”");
    H["â‹‰"] = H.ltimes = h(Nt, "\\ltimes ", "&#8905;", "â‹‰");
    H["â‹Š"] = H.rtimes = h(Nt, "\\rtimes ", "&#8906;", "â‹Š");
    H["â‹Œ"] = H.rightthreetimes = h(Nt, "\\rightthreetimes ", "&#8908;", "â‹Œ");
    H["â‹‹"] = H.leftthreetimes = h(Nt, "\\leftthreetimes ", "&#8907;", "â‹‹");
    H["â•±"] = H.diagup = h(Nt, "\\diagup ", "&#x2571;", "â•±");
    H["â•²"] = H.diagdown = h(Nt, "\\diagdown ", "&#x2572;", "â•²");
    H["âŠ¼"] = H.barwedge = h(Nt, "\\barwedge ", "&#x22BC;", "âŠ¼");
    H["âŠ»"] = H.veebar = h(Nt, "\\veebar ", "&#x22BB;", "âŠ»");
    H["âŒ†"] = H.doublebarwedge = h(Nt, "\\doublebarwedge ", "&#x2306;", "âŒ†");
    H["â‹Ž"] = H.curlyvee = h(Nt, "\\curlyvee ", "&#x22CE;", "â‹Ž");
    H["â‹"] = H.curlywedge = h(Nt, "\\curlywedge ", "&#x22CF;", "â‹");
    H["â‹’"] = H.Cap = h(Nt, "\\Cap ", "&#x22D3;", "â‹’");
    H["â‹“"] = H.Cup = h(Nt, "\\Cup ", "&#x22D2;", "â‹“");
    H["âŠš"] = H.circledcirc = h(Nt, "\\circledcirc ", "&#x229A;", "âŠš");
    H["âŠ›"] = H.circledast = h(Nt, "\\circledast ", "&#x229B;", "âŠ›");
    H["âŠ"] = H.circleddash = h(Nt, "\\circleddash ", "&#x229D;", "âŠ");
    H["âŠ "] = H.boxtimes = h(Nt, "\\boxtimes ", "&#x22A0;", "âŠ ");
    H["âŠ¡"] = H.boxdot = h(Nt, "\\boxdot ", "&#x22A1;", "âŠ¡");
    H["âŠž"] = H.boxplus = h(Nt, "\\boxplus ", "&#x229E;", "âŠž");
    H["âŠŸ"] = H.boxminus = h(Nt, "\\boxminus ", "&#x229F;", "âŠŸ");
    H["âŠº"] = H.intercal = h(Nt, "\\intercal ", "&#x22BA;", "âŠº");
    H["â‰ "] = H.ne = H.neq = h(Nt, "\\ne ", "&ne;");
    H.ast = H.star = H.loast = H.lowast = h(Nt, "\\ast ", "&lowast;");
    H.therefor = H.therefore = h(Nt, "\\therefore ", "&there4;");
    H.cuz = H.because = h(Nt, "\\because ", "&#8757;");
    H.prop = H.propto = h(Nt, "\\propto ", "&prop;");
    H["â‰ˆ"] = H.asymp = H.approx = h(Nt, "\\approx ", "&asymp;");
    H.lt = h(Nt, "<", "&lt;");
    H.gt = h(Nt, ">", "&gt;");
    H["â‰¤"] = H.le = H.leq = h(Nt, "\\le ", "&le;");
    H["â‰¥"] = H.ge = H.geq = H.geqslant = h(Nt, "\\ge ", "&ge;");
    H.isin = H["in"] = h(Nt, "\\in ", "&isin;");
    H.ni = H.contains = h(Nt, "\\ni ", "&ni;");
    H.notni = H.niton = H.notcontains = H.doesnotcontain = h(Nt, "\\not\\ni ", "&#8716;");
    H.sub = H.subset = h(Nt, "\\subset ", "&sub;");
    H.sup = H.supset = H.superset = h(Nt, "\\supset ", "&sup;");
    H.nsub = H.notsub = H.nsubset = H.notsubset = h(Nt, "\\not\\subset ", "&#8836;");
    H.nsup = H.notsup = H.nsupset = H.notsupset = H.nsuperset = H.notsuperset = h(Nt, "\\not\\supset ", "&#8837;");
    H.sube = H.subeq = H.subsete = H.subseteq = h(Nt, "\\subseteq ", "&sube;");
    H.supe = H.supeq = H.supsete = H.supseteq = H.supersete = H.superseteq = h(Nt, "\\supseteq ", "&supe;");
    H.nsube = H.nsubeq = H.notsube = H.notsubeq = H.nsubsete = H.nsubseteq = H.notsubsete = H.notsubseteq = h(Nt, "\\not\\subseteq ", "&#8840;");
    H.nsupe = H.nsupeq = H.notsupe = H.notsupeq = H.nsupsete = H.nsupseteq = H.notsupsete = H.notsupseteq = H.nsupersete = H.nsuperseteq = H.notsupersete = H.notsuperseteq = h(Nt, "\\not\\supseteq ", "&#8841;");
    var kt = d(k, function(e, t) {
        e.init = function(e, n) {
            t.init.call(this, e, "<big>" + n + "</big>")
        }
    });
    H["limlimits"] = H["limlimits"] = H.summation = h(kt, "\\lim\\limits ", "lim");
    H["âˆ‘"] = H.sum = H.summation = h(kt, "\\sum ", "&sum;");
    H["âˆ‘"] = H["sumlimits"] = H["sumlimits"] = H.summation = h(kt, "\\sum\\limits ", "&sum;");
    H["âˆ"] = H.prod = H.product = h(kt, "\\prod ", "&prod;");
    H["prodlimits"] = H["prodlimits"] = h(kt, "\\prod\\limits ", "&prod;");
    H.coprod = H.coproduct = h(kt, "\\coprod ", "&#8720;");
    H["coprodlimits"] = H["coprodlimits"] = h(kt, "\\coprod\\limits ", "&#8720;");
    H["âˆ«"] = H["intlimits"] = H["intlimits"] = H.integral = h(kt, "\\int\\limits ", "&int;");
    H["âˆ«"] = H["int"] = H.integral = h(kt, "\\int ", "&int;");
    H["âˆ«âˆ«"] = H["iint"] = H.iintegral = h(kt, "\\iint ", "&#x222c;");
    H["âˆ«âˆ«"] = H["iintlimits"] = H["iintlimits"] = H.iintegral = h(kt, "\\iint\\limits ", "&#x222c;");
    H["âˆ«âˆ«âˆ«"] = H["iiint"] = H.iiintegral = h(kt, "\\iiint ", "&iiint;");
    H["âˆ«âˆ«âˆ«"] = H["iiintlimits"] = H["iiintlimits"] = H.iiintegral = h(kt, "\\iiint\\limits ", "&iiint;");
    H["âˆ«âˆ«âˆ«âˆ«"] = H["iiiint"] = H.iiiintegral = h(kt, "\\iiiint ", "&iiiint;");
    H["âˆ«âˆ«âˆ«âˆ«"] = H["iiiintlimits"] = H["iiiintlimits"] = H.iiiintegral = h(kt, "\\iiiint\\limits ", "&iiiint;");
    H.oint = h(St, "\\oint ", "&#8750;");
    H.ointlimits = H["ointlimits"] = h(St, "\\oint\\limits ", "&#8750;");
    H.N = H.naturals = H.Naturals = h(St, "\\mathbb{N}", "&#8469;");
    H.P = H.primes = H.Primes = H.projective = H.Projective = H.probability = H.Probability = h(St, "\\mathbb{P}", "&#8473;");
    H.Z = H.integers = H.Integers = h(St, "\\mathbb{Z}", "&#8484;");
    H.Q = H.rationals = H.Rationals = h(St, "\\mathbb{Q}", "&#8474;");
    H.R = H.reals = H.Reals = h(St, "\\mathbb{R}", "&#8477;");
    H.C = H.complex = H.Complex = H.complexes = H.Complexes = H.complexplane = H.Complexplane = H.ComplexPlane = h(St, "\\mathbb{C}", "&#8450;");
    H.H = H.Hamiltonian = H.quaternions = H.Quaternions = h(St, "\\mathbb{H}", "&#8461;");
    H.quad = H.emsp = h(St, "\\quad ", "&#160;&#160;");
    H.qquad = h(St, "\\qquad ", "&#160;&#160;&#160;&#160;");
    H.thinspace = h(St, "\\, ", "&#8202;");
    H.thickspace = h(St, "\\; ", "&#160;");
    H.mediumspace = h(St, "\\: ", "&#8201;");
    H.enter = h(St, "\\\\ ", " \\\\\n");
    H.thinspace = h(St, "\\, ", " ");
    H.diamond = h(St, "\\diamond ", "&#9671;");
    H.bigtriangleup = h(St, "\\bigtriangleup ", "&#9651;");
    H.ominus = h(St, "\\ominus ", "&#8854;");
    H.uplus = h(St, "\\uplus ", "&#8846;");
    H.bigtriangledown = h(St, "\\bigtriangledown ", "&#9661;");
    H.sqcap = h(St, "\\sqcap ", "&#8851;");
    H.triangleleft = h(St, "\\triangleleft ", "&#8882;");
    H.sqcup = h(St, "\\sqcup ", "&#8852;");
    H.triangleright = h(St, "\\triangleright ", "&#8883;");
    H.odot = h(St, "\\odot ", "&#8857;");
    H.bigcirc = h(St, "\\bigcirc ", "&#9711;");
    H.dagger = h(St, "\\dagger ", "&#0134;");
    H.ddagger = h(St, "\\ddagger ", "&#135;");
    H.wr = h(St, "\\wr ", "&#8768;");
    H.amalg = h(St, "\\amalg ", "&#8720;");
    H.models = h(St, "\\models ", "&#8872;");
    H.prec = h(St, "\\prec ", "&#8826;");
    H.succ = h(St, "\\succ ", "&#8827;");
    H.preceq = h(St, "\\preceq ", "&#8828;");
    H.succeq = h(St, "\\succeq ", "&#8829;");
    H.simeq = h(St, "\\simeq ", "&#8771;");
    H.mid = h(St, "\\mid ", "&#8739;");
    H.ll = h(St, "\\ll ", "&#8810;");
    H.gg = h(St, "\\gg ", "&#8811;");
    H.parallel = h(St, "\\parallel ", "&#8741;");
    H.bowtie = h(St, "\\bowtie ", "&#8904;");
    H.sqsubset = h(St, "\\sqsubset ", "&#8847;");
    H.sqsupset = h(St, "\\sqsupset ", "&#8848;");
    H.smile = h(St, "\\smile ", "&#8995;");
    H.sqsubseteq = h(St, "\\sqsubseteq ", "&#8849;");
    H.sqsupseteq = h(St, "\\sqsupseteq ", "&#8850;");
    H.doteq = h(St, "\\doteq ", "&#8784;");
    H.doteqdot = h(St, "\\doteqdot ", "&#x2251;");
    H.frown = h(St, "\\frown ", "&#8994;");
    H.vdash = h(St, "\\vdash ", "&#8870;");
    H.dashv = h(St, "\\dashv ", "&#8867;");
    H.longleftarrow = h(St, "\\longleftarrow ", "&#8592;");
    H.longrightarrow = h(St, "\\longrightarrow ", "&#8594;");
    H.Longleftarrow = h(St, "\\Longleftarrow ", "&#8656;");
    H.Longrightarrow = h(St, "\\Longrightarrow ", "&#8658;");
    H.longleftrightarrow = h(St, "\\longleftrightarrow ", "&#8596;");
    H.updownarrow = h(St, "\\updownarrow ", "&#8597;");
    H.Longleftrightarrow = h(St, "\\Longleftrightarrow ", "&#8660;");
    H.Updownarrow = h(St, "\\Updownarrow ", "&#8661;");
    H.mapsto = h(St, "\\mapsto ", "&#8614;");
    H.nearrow = h(St, "\\nearrow ", "&#8599;");
    H.hookleftarrow = h(St, "\\hookleftarrow ", "&#8617;");
    H.hookrightarrow = h(St, "\\hookrightarrow ", "&#8618;");
    H.searrow = h(St, "\\searrow ", "&#8600;");
    H.leftharpoonup = h(St, "\\leftharpoonup ", "&#8636;");
    H.rightharpoonup = h(St, "\\rightharpoonup ", "&#8640;");
    H.swarrow = h(St, "\\swarrow ", "&#8601;");
    H.leftharpoondown = h(St, "\\leftharpoondown ", "&#8637;");
    H.rightharpoondown = h(St, "\\rightharpoondown ", "&#8641;");
    H.nwarrow = h(St, "\\nwarrow ", "&#8598;");
    H.ldots = h(St, "\\ldots ", "&#8230;");
    H.ddots = h(St, "\\ddots ", "&#8944;");
    H.surd = h(St, "\\surd ", "&#8730;");
    H.triangle = h(St, "\\triangle ", "&#9653;");
    H.ell = h(St, "\\ell ", "&#8467;");
    H.top = h(St, "\\top ", "&#8868;");
    H.flat = h(St, "\\flat ", "&#9837;");
    H.natural = h(St, "\\natural ", "&#9838;");
    H.sharp = h(St, "\\sharp ", "&#9839;");
    H.wp = h(St, "\\wp ", "&#8472;");
    H.bot = h(St, "\\bot ", "&#8869;");
    H.clubsuit = h(St, "\\clubsuit ", "&#9827;");
    H.diamondsuit = h(St, "\\diamondsuit ", "&#9826;");
    H.heartsuit = h(St, "\\heartsuit ", "&#9825;");
    H.spadesuit = h(St, "\\spadesuit ", "&#9824;");
    H.oiint = h(St, "\\oiint ", "&#8751;");
    H.oiiint = h(St, "\\oiiint ", "&#8752;");
    H.bigcap = h(St, "\\bigcap ", "&#8745;");
    H.bigcup = h(St, "\\bigcup ", "&#8746;");
    H.bigsqcup = h(St, "\\bigsqcup ", "&#8852;");
    H.bigvee = h(St, "\\bigvee ", "&#8744;");
    H.bigwedge = h(St, "\\bigwedge ", "&#8743;");
    H.bigodot = h(St, "\\bigodot ", "&#8857;");
    H.bigotimes = h(St, "\\bigotimes ", "&#8855;");
    H.bigoplus = h(St, "\\bigoplus ", "&#8853;");
    H.biguplus = h(St, "\\biguplus ", "&#8846;");
    H.lfloor = h(St, "\\lfloor ", "&#8970;");
    H.rfloor = h(St, "\\rfloor ", "&#8971;");
    H.lceil = h(St, "\\lceil ", "&#8968;");
    H.rceil = h(St, "\\rceil ", "&#8969;");
    H.slash = h(St, "\\slash ", "&#47;");
    H.opencurlybrace = h(St, "\\opencurlybrace ", "&#123;");
    H.closecurlybrace = h(St, "\\closecurlybrace ", "&#125;");
    H.caret = h(St, "\\caret ", "^");
    H.underscore = h(St, "\\underscore ", "_");
    H.backslash = h(St, "\\backslash ", "\\");
    H.vert = h(St, "|");
    H.perp = H.perpendicular = h(St, "\\perp ", "&perp;");
    H.nabla = H.del = h(St, "\\nabla ", "&nabla;");
    H.hbar = h(St, "\\hbar ", "&#8463;");
    H.AA = H.Angstrom = H.angstrom = h(St, "\\text\\AA ", "&#8491;");
    H.ring = H.circ = H.circle = h(St, "\\circ ", "&#8728;");
    H.bull = H.bullet = h(St, "\\bullet ", "&bull;");
    H.setminus = H.smallsetminus = h(St, "\\setminus ", "&#8726;");
    H.not = H["Â¬"] = H.neg = h(St, "\\neg ", "&not;");
    H["â€¦"] = H.dots = H.ellip = H.hellip = H.ellipsis = H.hellipsis = h(St, "\\dots ", "&hellip;");
    H.converges = H.darr = H.dnarr = H.dnarrow = H.downarrow = h(St, "\\downarrow ", "&darr;");
    H.dArr = H.dnArr = H.dnArrow = H.Downarrow = h(St, "\\Downarrow ", "&dArr;");
    H.diverges = H.uarr = H.uparrow = h(St, "\\uparrow ", "&uarr;");
    H.uArr = H.Uparrow = h(St, "\\Uparrow ", "&uArr;");
    H.to = h(Nt, "\\to ", "&rarr;");
    H.rarr = H.rightarrow = h(St, "\\rightarrow ", "&rarr;");
    H.implies = h(Nt, "\\Rightarrow ", "&rArr;");
    H.rArr = H.Rightarrow = h(St, "\\Rightarrow ", "&rArr;");
    H.gets = h(Nt, "\\gets ", "&larr;");
    H.larr = H.leftarrow = h(St, "\\leftarrow ", "&larr;");
    H.impliedby = h(Nt, "\\Leftarrow ", "&lArr;");
    H.lArr = H.Leftarrow = h(St, "\\Leftarrow ", "&lArr;");
    H.harr = H.lrarr = H.leftrightarrow = h(St, "\\leftrightarrow ", "&harr;");
    H.iff = h(Nt, "\\Leftrightarrow ", "&hArr;");
    H.hArr = H.lrArr = H.Leftrightarrow = h(St, "\\Leftrightarrow ", "&hArr;");
    H.Re = H.Real = H.real = h(St, "\\Re ", "&real;");
    H.Im = H.imag = H.image = H.imagin = H.imaginary = H.Imaginary = h(St, "\\Im ", "&image;");
    H.part = H.partial = h(St, "\\partial ", "&part;");
    H.inf = H.infin = H.infty = H.infinity = h(St, "\\infty ", "&infin;");
    H.alef = H.alefsym = H.aleph = H.alephsym = h(St, "\\aleph ", "&alefsym;");
    H.xist = H.xists = H.exist = H.exists = h(St, "\\exists ", "&exist;");
    H.and = H.land = H.wedge = h(St, "\\wedge ", "&and;");
    H.or = H.lor = H.vee = h(St, "\\vee ", "&or;");
    H.o = H.O = H.empty = H.emptyset = H.oslash = H.Oslash = H.nothing = H.varnothing = h(Nt, "\\varnothing ", "&empty;");
    H.cup = H.union = h(Nt, "\\cup ", "&cup;");
    H.cap = H.intersect = H.intersection = h(Nt, "\\cap ", "&cap;");
    H.deg = H.degree = h(St, "^\\circ ", "&deg;");
    H.ang = H.angle = h(St, "\\angle ", "&ang;");
    var Lt = d(k, function(e, t) {
        e.init = function(e) {
            t.init.call(this, "\\" + e + " ", "<span>" + e + "</span>")
        };
        e.respace = function() {
            this.jQ[0].className = this[y] instanceof W || this[y] instanceof at ? "" : "non-italicized-function"
        }
    });
    H.ln = H.lg = H.log = H.span = H.proj = H.det = H.dim = H.min = H.max = H.mod = H.lcm = H.gcd = H.gcf = H.hcf = H.lim = Lt;
    (function() {
        var e = ["sin", "cos", "tan", "sec", "cosec", "csc", "cotan", "cot"];
        for (var t in e) {
            H[e[t]] = H[e[t] + "h"] = H["a" + e[t]] = H["arc" + e[t]] = H["a" + e[t] + "h"] = H["arc" + e[t] + "h"] = Lt
        }
    })();
    var At = function() {
        function e(e) {
            var t = L();
            e.adopt(t, 0, 0);
            return t
        }

        function t(e) {
            var t = e[0] || L();
            for (var n = 1; n < e.length; n += 1) {
                e[n].children().adopt(t, t.ends[y], 0)
            }
            return t
        }
        var n = m.string;
        var r = m.regex;
        var i = m.letter;
        var s = m.any;
        var o = m.optWhitespace;
        var u = m.succeed;
        var a = m.fail;
        var f = i.map(Et);
        var l = r(/^[^${}\\_^]/).map(St);
        var c = r(/^[^\\a-eg-zA-Z]/).or(n("\\").then(r(/^[a-z]+/i).or(r(/^\s+/).result(" ")).or(r(/^[\\\\]/).result("enter")).or(r(/^[\\,]/).result("thinspace")).or(r(/^[\\;]/).result("thickspace")).or(r(/^[\\:]/).result("mediumspace")).or(s))).then(function(e) {
            var t = H[e];
            if (t) {
                return t(e).parser()
            } else {
                return a("unknown command: \\" + e)
            }
        });
        var h = r(/^\\begin{cases}/).then(r(/^(.*?)\\end{cases}/)).then(function(e) {
            var t = e.replace(/\\end{cases}/, "");
            var n = H.cases();
            var r = [];
            var i = t.split("\\\\");
            for (var s = 0; s < i.length; s++) {
                var o = i[s].split("&");
                for (var e = 0; e < o.length; e++) {
                    var u = At.parse(o[e]);
                    r.push(u)
                }
            }
            rt(i.length, o.length);
            n.blocks = r;
            for (var s = 0; s < r.length; s += 1) {
                r[s].adopt(n, n.ends[y], 0)
            }
            return m.succeed(n)
        });
        var p = r(/^\\begin{matrix}/).then(r(/^(.*?)\\end{matrix}/)).then(function(e) {
            var t = e.replace(/\\end{matrix}/, "");
            var n = H.matrix();
            var r = [];
            var i = t.split("\\\\");
            for (var s = 0; s < i.length; s++) {
                var o = i[s].split("&");
                for (var e = 0; e < o.length; e++) {
                    var u = At.parse(o[e]);
                    r.push(u)
                }
            }
            st(i.length, o.length);
            n.blocks = r;
            for (var s = 0; s < r.length; s += 1) {
                r[s].adopt(n, n.ends[y], 0)
            }
            return m.succeed(n)
        });
        var d = c.or(h).or(p).or(f).or(l);
        var v = n("{").then(function() {
            return b
        }).skip(n("}"));
        var g = o.then(v.or(d.map(e)));
        var b = g.many().map(t).skip(o);
        var w = n("[").then(g.then(function(e) {
            return e.join("latex") !== "]" ? u(e) : a()
        }).many().map(t).skip(o)).skip(n("]"));
        var E = b;
        E.block = g;
        E.optBlock = w;
        return E
    }();
    var Ot = d(E, function(e) {
        function t(e, t) {
            if (e[y][t]) e.insAtLeftEnd(e[y][t]);
            else if (e[g][t]) e.insAtRightEnd(e[g][t]);
            else {
                var r = e.parent;
                do {
                    var i = r[t];
                    if (i) {
                        if (typeof i === "function") i = r[t](e);
                        if (i === false || i instanceof L) {
                            e.upDownCache[r.id] = E(e.parent, e[g], e[y]);
                            if (i instanceof L) {
                                var s = e.upDownCache[i.id];
                                if (s) {
                                    if (s[y]) {
                                        e.insLeftOf(s[y])
                                    } else {
                                        e.insAtRightEnd(s.parent)
                                    }
                                } else {
                                    var o = n(e).left;
                                    e.insAtRightEnd(i);
                                    e.seekHoriz(o, i)
                                }
                            }
                            break
                        }
                    }
                    r = r.parent.parent
                } while (r)
            }
            return e.clearSelection().show()
        }

        function n(e) {
            var t = e.jQ.removeClass("cursor").offset();
            e.jQ.addClass("cursor");
            return t
        }

        function s(e) {
            e.upDownCache = {}
        }
        e.init = function(e) {
            this.parent = this.root = e;
            var t = this.jQ = this._1 = w('<span class="cursor">&zwj;</span>');
            this.blink = function() {
                t.toggleClass("blink")
            };
            this.upDownCache = {}
        };
        e.show = function() {
            this.jQ = this._1.removeClass("blink");
            if ("intervalId" in this) clearInterval(this.intervalId);
            else {
                if (this[y]) {
                    if (this.selection && this.selection.ends[g][g] === this[g]) this.jQ.insertBefore(this.selection.jQ);
                    else this.jQ.insertBefore(this[y].jQ.first())
                } else this.jQ.appendTo(this.parent.jQ);
                this.parent.focus()
            }
            this.intervalId = setInterval(this.blink, 500);
            return this
        };
        e.hide = function() {
            if ("intervalId" in this) clearInterval(this.intervalId);
            delete this.intervalId;
            this.jQ.detach();
            this.jQ = w();
            return this
        };
        e.withDirInsertAt = function(e, t, n, r) {
            var i = this.parent;
            this.parent = t;
            this[e] = n;
            this[-e] = r;
            i.blur()
        };
        e.insDirOf = function(e, t) {
            b(e);
            this.withDirInsertAt(e, t.parent, t[e], t);
            this.parent.jQ.addClass("hasCursor");
            this.jQ.insDirOf(e, t.jQ);
            return this
        };
        e.insLeftOf = function(e) {
            return this.insDirOf(g, e)
        };
        e.insRightOf = function(e) {
            return this.insDirOf(y, e)
        };
        e.insAtDirEnd = function(e, t) {
            b(e);
            this.withDirInsertAt(e, t, 0, t.ends[e]);
            if (e === g && t.textarea) {
                this.jQ.insDirOf(-e, t.textarea)
            } else {
                this.jQ.insAtDirEnd(e, t.jQ)
            }
            t.focus();
            return this
        };
        e.insAtLeftEnd = function(e) {
            return this.insAtDirEnd(g, e)
        };
        e.insAtRightEnd = function(e) {
            return this.insAtDirEnd(y, e)
        };
        e.hopDir = function(e) {
            b(e);
            this.jQ.insDirOf(e, this[e].jQ);
            this[-e] = this[e];
            this[e] = this[e][e];
            return this
        };
        e.hopLeft = function() {
            return this.hopDir(g)
        };
        e.hopRight = function() {
            return this.hopDir(y)
        };
        e.moveDirWithin = function(e, t) {
            b(e);
            if (this[e]) {
                if (this[e].ends[-e]) this.insAtDirEnd(-e, this[e].ends[-e]);
                else this.hopDir(e)
            } else {
                if (this.parent === t) return;
                if (this.parent[e]) this.insAtDirEnd(-e, this.parent[e]);
                else this.insDirOf(e, this.parent.parent)
            }
        };
        e.moveLeftWithin = function(e) {
            return this.moveDirWithin(g, e)
        };
        e.moveRightWithin = function(e) {
            return this.moveDirWithin(y, e)
        };
        e.moveDir = function(e) {
            b(e);
            s(this);
            if (this.selection) {
                this.insDirOf(e, this.selection.ends[e]).clearSelection()
            } else {
                this.moveDirWithin(e, this.root)
            }
            return this.show()
        };
        e.moveLeft = function() {
            return this.moveDir(g)
        };
        e.moveRight = function() {
            return this.moveDir(y)
        };
        e.moveUp = function() {
            return t(this, "up")
        };
        e.moveDown = function() {
            return t(this, "down")
        };
        e.seek = function(e, t, n) {
            s(this);
            var o, u, a = this.clearSelection().show();
            if (e.hasClass("empty")) {
                a.insAtLeftEnd(N[e.attr(i)]);
                return a
            }
            o = N[e.attr(r)];
            if (o instanceof k) {
                if (e.outerWidth() > 2 * (t - e.offset().left)) a.insLeftOf(o);
                else a.insRightOf(o);
                return a
            }
            if (!o) {
                u = N[e.attr(i)];
                if (!u) {
                    e = e.parent();
                    o = N[e.attr(r)];
                    if (!o) {
                        u = N[e.attr(i)];
                        if (!u) u = a.root
                    }
                }
            }
            if (o) a.insRightOf(o);
            else a.insAtRightEnd(u);
            return a.seekHoriz(t, a.root)
        };
        e.seekHoriz = function(e, t) {
            var r = this;
            var i = n(r).left - e;
            var s;
            do {
                r.moveLeftWithin(t);
                s = i;
                i = n(r).left - e
            } while (i > 0 && (r[g] || r.parent !== t));
            if (-i > s) r.moveRightWithin(t);
            return r
        };
        e.writeLatex = function(e) {
            var t = this;
            s(t);
            t.show().deleteSelection();
            var n = m.all;
            var r = m.eof;
            var i = At.skip(r).or(n.result(false)).parse(e);
            if (i) {
                i.children().adopt(t.parent, t[g], t[y]);
                N.jQize(i.join("html")).insertBefore(t.jQ);
                t[g] = i.ends[y];
                i.finalizeInsert();
                t.parent.bubble("redraw")
            }
            return this.hide()
        };
        e.write = function(e) {
            var t = this.prepareWrite();
            return this.insertCh(e, t)
        };
        e.insertCh = function(e, t) {
            this.parent.write(this, e, t);
            return this
        };
        e.insertCmd = function(e, t) {
            var n = H[e];
            if (n) {
                n = n(e);
                if (t) n.replaces(t);
                n.createLeftOf(this)
            } else {
                n = dt();
                n.replaces(e);
                n.ends[g].focus = function() {
                    delete this.focus;
                    return this
                };
                n.createLeftOf(this);
                this.insRightOf(n);
                if (t) t.remove()
            }
            return this
        };
        e.unwrapGramp = function() {
            var e = this.parent.parent;
            var t = e.parent;
            var n = e[y];
            var r = this;
            var i = e[g];
            e.disown().eachChild(function(r) {
                if (r.isEmpty()) return;
                r.children().adopt(t, i, n).each(function(t) {
                    t.jQ.insertBefore(e.jQ.first())
                });
                i = r.ends[y]
            });
            if (!this[y]) {
                if (this[g]) this[y] = this[g][y];
                else {
                    while (!this[y]) {
                        this.parent = this.parent[y];
                        if (this.parent) this[y] = this.parent.ends[g];
                        else {
                            this[y] = e[y];
                            this.parent = t;
                            break
                        }
                    }
                }
            }
            if (this[y]) this.insLeftOf(this[y]);
            else this.insAtRightEnd(t);
            e.jQ.remove();
            if (e[g]) e[g].respace();
            if (e[y]) e[y].respace()
        };
        e.deleteDir = function(e) {
            b(e);
            s(this);
            this.show();
            if (this.deleteSelection());
            else if (this[e]) {
                if (this[e].isEmpty()) this[e] = this[e].remove()[e];
                else this.selectDir(e)
            } else if (this.parent !== this.root) {
                if (this.parent.parent.isEmpty()) return this.insDirOf(-e, this.parent.parent).deleteDir(e);
                else this.unwrapGramp()
            }
            if (this[g]) this[g].respace();
            if (this[y]) this[y].respace();
            this.parent.bubble("redraw");
            return this
        };
        e.backspace = function() {
            return this.deleteDir(g)
        };
        e.deleteForward = function() {
            return this.deleteDir(y)
        };
        e.selectFrom = function(e) {
            var t = this,
                n = e;
            e: while (true) {
                for (var r = this; r !== t.parent.parent; r = r.parent.parent)
                    if (r.parent === n.parent) {
                        s = r;
                        o = n;
                        break e
                    }
                for (var i = e; i !== n.parent.parent; i = i.parent.parent)
                    if (t.parent === i.parent) {
                        s = t;
                        o = i;
                        break e
                    }
                if (t.parent.parent) t = t.parent.parent;
                if (n.parent.parent) n = n.parent.parent
            }
            var s, o, u;
            if (s[y] !== o) {
                for (var a = s; a; a = a[y]) {
                    if (a === o[g]) {
                        u = true;
                        break
                    }
                }
                if (!u) {
                    u = o;
                    o = s;
                    s = u
                }
            }
            this.hide().selection = Mt(s[g][y] || s.parent.ends[g], o[y][g] || o.parent.ends[y]);
            this.insRightOf(o[y][g] || o.parent.ends[y]);
            this.root.selectionChanged()
        };
        e.selectDir = function(e) {
            b(e);
            s(this);
            if (this.selection) {
                if (this.selection.ends[e] === this[-e]) {
                    if (this[e]) this.hopDir(e).selection.extendDir(e);
                    else if (this.parent !== this.root) {
                        this.insDirOf(e, this.parent.parent).selection.levelUp()
                    }
                } else {
                    this.hopDir(e);
                    if (this.selection.ends[e] === this.selection.ends[-e]) {
                        this.clearSelection().show();
                        return
                    }
                    this.selection.retractDir(e)
                }
            } else {
                if (this[e]) this.hopDir(e);
                else {
                    if (this.parent === this.root) return;
                    this.insDirOf(e, this.parent.parent)
                }
                this.hide().selection = Mt(this[-e])
            }
            this.root.selectionChanged()
        };
        e.selectLeft = function() {
            return this.selectDir(g)
        };
        e.selectRight = function() {
            return this.selectDir(y)
        };
        e.prepareMove = function() {
            s(this);
            return this.show().clearSelection()
        };
        e.prepareEdit = function() {
            s(this);
            return this.show().deleteSelection()
        };
        e.prepareWrite = function() {
            s(this);
            return this.show().replaceSelection()
        };
        e.clearSelection = function() {
            if (this.selection) {
                this.selection.clear();
                delete this.selection;
                this.root.selectionChanged()
            }
            return this
        };
        e.deleteSelection = function() {
            if (!this.selection) return false;
            this[g] = this.selection.ends[g][g];
            this[y] = this.selection.ends[y][y];
            this.selection.remove();
            this.root.selectionChanged();
            return delete this.selection
        };
        e.replaceSelection = function() {
            var e = this.selection;
            if (e) {
                this[g] = e.ends[g][g];
                this[y] = e.ends[y][y];
                delete this.selection
            }
            return e
        }
    });
    var Mt = d(A, function(e, t) {
        e.init = function() {
            var e = this;
            t.init.apply(e, arguments);
            e.jQwrap(e.jQ)
        };
        e.jQwrap = function(e) {
            this.jQ = e.wrapAll('<span class="selection"></span>').parent()
        };
        e.adopt = function() {
            this.jQ.replaceWith(this.jQ = this.jQ.children());
            return t.adopt.apply(this, arguments)
        };
        e.clear = function() {
            this.jQ.replaceWith(this.jQ.children());
            return this
        };
        e.levelUp = function() {
            var e = this,
                t = e.ends[g] = e.ends[y] = e.ends[y].parent.parent;
            e.clear().jQwrap(t.jQ);
            return e
        };
        e.extendDir = function(e) {
            b(e);
            this.ends[e] = this.ends[e][e];
            this.ends[e].jQ.insAtDirEnd(e, this.jQ);
            return this
        };
        e.extendLeft = function() {
            return this.extendDir(g)
        };
        e.extendRight = function() {
            return this.extendDir(y)
        };
        e.retractDir = function(e) {
            b(e);
            this.ends[-e].jQ.insDirOf(-e, this.jQ);
            this.ends[-e] = this.ends[-e][e]
        };
        e.retractRight = function() {
            return this.retractDir(y)
        };
        e.retractLeft = function() {
            return this.retractDir(g)
        }
    });
    e.fn.mathquill = function(e, t) {
        switch (e) {
            case "redraw":
                return this.each(function() {
                    var e = w(this).attr(i),
                        t = e && N[e];
                    if (t) {
                        (function n(e) {
                            e.eachChild(n);
                            if (e.redraw) e.redraw()
                        })(t)
                    }
                });
            case "revert":
                return this.each(function() {
                    var e = w(this).attr(i),
                        t = e && N[e];
                    if (t && t.revert) t.revert()
                });
            case "latex":
                if (arguments.length > 1) {
                    return this.each(function() {
                        var e = w(this).attr(i),
                            n = e && N[e];
                        if (n) n.renderLatex(t)
                    })
                }
                var n = w(this).attr(i),
                    r = n && N[n];
                u = [];
                f = "";
                a = 0;
                sizecases = 0;
                caseString = "";
                return r && r.latex();
            case "text":
                var n = w(this).attr(i),
                    r = n && N[n];
                return r && r.text();
            case "html":
                return this.html().replace(/ ?hasCursor|hasCursor /, "").replace(/ class=(""|(?= |>))/g, "").replace(/<span class="?cursor( blink)?"?><\/span>/i, "").replace(/<span class="?textarea"?><textarea><\/textarea><\/span>/i, "");
            case "write":
                if (arguments.length > 1) return this.each(function() {
                    var e = w(this).attr(i),
                        n = e && N[e],
                        r = n && n.cursor;
                    if (r) r.writeLatex(t).parent.blur();
                    u = [];
                    f = "";
                    a = 0;
                    sizecases = 0;
                    caseString = ""
                });
            case "cmd":
                if (arguments.length > 1) return this.each(function() {
                    var e = w(this).attr(i),
                        n = e && N[e],
                        r = n && n.cursor;
                    if (r) {
                        var s = r.prepareWrite();
                        if (/^\\[a-z]+$/i.test(t)) r.insertCmd(t.slice(1), s);
                        else r.insertCh(t, s);
                        r.hide().parent.blur()
                    }
                });
            default:
                var s = e === "textbox",
                    o = s || e === "editable",
                    l = s ? D : M;
                return this.each(function() {
                    O(w(this), l(), s, o)
                })
        }
    };
    e(function() {
        e(".mathquill-editable:not(.mathquill-rendered-math)").mathquill("editable");
        e(".mathquill-textbox:not(.mathquill-rendered-math)").mathquill("textbox");
        e(".mathquill-embedded-latex").mathquill()
    })
})()